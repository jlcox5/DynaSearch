<?xml version="1.0" encoding="utf-8"?>
<project version="2.0.0a12" title="">
  <file path="admin.php" hash="6aa7c3334afa07038c2a941cb945b313" package="Default">
    <include line="2" type="Include" package="Default">
      <name>assets/php/config.php</name>
    </include>
    <include line="3" type="Include" package="Default">
      <name>assets/php/std_api.php</name>
    </include>
    <include line="4" type="Require Once" package="Default">
      <name>assets/php/db_util.php</name>
    </include>
    <include line="22" type="Include" package="Default">
      <name>assets/php/standard.php</name>
    </include>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file admin.php</error>
    </parse_markers>
  </file>
  <file path="adminAssets.php" hash="029d3454959c18cafe8e977bae951348" package="Default">
    <include line="3" type="Require Once" package="Default">
      <name>assets/php/std_api.php</name>
    </include>
    <include line="4" type="Include" package="Default">
      <name>assets/php/config.php</name>
    </include>
    <include line="5" type="Include" package="Default">
      <name>assets/php/db_util.php</name>
    </include>
    <include line="17" type="Include" package="Default">
      <name>assets/php/admin_dir.php</name>
    </include>
    <include line="85" type="Include" package="Default">
      <name>assets/php/standard.php</name>
    </include>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file adminAssets.php</error>
    </parse_markers>
  </file>
  <file path="adminSettings.php" hash="58535c03a810f7e1521d6ff0c4cf9243" package="Default">
    <include line="3" type="Require Once" package="Default">
      <name>assets/php/std_api.php</name>
    </include>
    <include line="4" type="Include" package="Default">
      <name>assets/php/config.php</name>
    </include>
    <include line="5" type="Include" package="Default">
      <name>assets/php/db_util.php</name>
    </include>
    <include line="6" type="Include" package="Default">
      <name>assets/php/email_util.php</name>
    </include>
    <include line="7" type="Include" package="Default">
      <name>assets/php/PasswordHash.php</name>
    </include>
    <include line="22" type="Include" package="Default">
      <name>assets/php/admin_dir.php</name>
    </include>
    <include line="132" type="Include" package="Default">
      <name>assets/php/standard.php</name>
    </include>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file adminSettings.php</error>
    </parse_markers>
  </file>
  <file path="advance.php" hash="12e3afdbfb53dfa24835a48d82f15687" package="Default">
    <include line="2" type="Require Once" package="Default">
      <name>assets/php/std_api.php</name>
    </include>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file advance.php</error>
    </parse_markers>
  </file>
  <file path="assets\php\admin_dir.php" hash="cf40ecdad8d6ed94af06d456a094116c" package="Default">
    <function namespace="global" line="8" package="Default">
      <name>sanitize</name>
      <full_name>\sanitize</full_name>
      <docblock line="5">
        <description></description>
        <long-description></long-description>
      </docblock>
      <argument line="8">
        <name>$string</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file assets\php\admin_dir.php</error>
      <error line="5" code="50011">No short description for function \sanitize()</error>
      <error line="5" code="50015">Argument $string is missing from the Docblock of \sanitize()</error>
    </parse_markers>
  </file>
  <file path="assets\php\checkPage.php" hash="4dce8c62e6b5cacc94c8caaec97fd9d5" package="Default">
    <function namespace="global" line="4" package="Default">
      <name>checkPage</name>
      <full_name>\checkPage</full_name>
      <argument line="4">
        <name>$pageNumber</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file assets\php\checkPage.php</error>
      <error line="4" code="50009">No DocBlock was found for function \checkPage()</error>
    </parse_markers>
  </file>
  <file path="assets\php\config.php" hash="7a5154521b09dfe609362c9835df9197" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file assets\php\config.php</error>
    </parse_markers>
  </file>
  <file path="assets\php\copy_adv.php" hash="5190912c01479d77f9392f09565c97c5" package="Default">
    <include line="3" type="Include" package="Default">
      <name>config.php</name>
    </include>
    <include line="4" type="Include" package="Default">
      <name>std_api.php</name>
    </include>
    <include line="8" type="Include" package="Default">
      <name>db_util.php</name>
    </include>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file assets\php\copy_adv.php</error>
    </parse_markers>
  </file>
  <file path="assets\php\copy_inst.php" hash="8dedace7aa62ebd07a4a0cf96ba21405" package="Default">
    <include line="3" type="Include" package="Default">
      <name>config.php</name>
    </include>
    <include line="4" type="Include" package="Default">
      <name>std_api.php</name>
    </include>
    <include line="8" type="Include" package="Default">
      <name>db_util.php</name>
    </include>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file assets\php\copy_inst.php</error>
    </parse_markers>
  </file>
  <file path="assets\php\create_dir.php" hash="1153eb1d6bbf52f0ca2e74ad336da53a" package="Default">
    <include line="3" type="Include" package="Default">
      <name>config.php</name>
    </include>
    <include line="4" type="Include" package="Default">
      <name>std_api.php</name>
    </include>
    <include line="8" type="Include" package="Default">
      <name>db_util.php</name>
    </include>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file assets\php\create_dir.php</error>
    </parse_markers>
  </file>
  <file path="assets\php\db_util.php" hash="e9f2712db8e52e219b931d8d93aa89ed" package="Default">
    <include line="3" type="Require Once" package="Default">
      <name>config.php</name>
    </include>
    <function namespace="global" line="5" package="Default">
      <name>query_db</name>
      <full_name>\query_db</full_name>
      <argument line="5">
        <name>$query</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file assets\php\db_util.php</error>
      <error line="5" code="50009">No DocBlock was found for function \query_db()</error>
    </parse_markers>
  </file>
  <file path="assets\php\email_util.php" hash="cae81a5a1427b51ecfca8b4295c1e774" package="Default">
    <function namespace="global" line="3" package="Default">
      <name>valid_email</name>
      <full_name>\valid_email</full_name>
      <argument line="3">
        <name>$emailAddr</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file assets\php\email_util.php</error>
      <error line="3" code="50009">No DocBlock was found for function \valid_email()</error>
    </parse_markers>
  </file>
  <file path="assets\php\file_util.php" hash="6dd79331483bd69b50d5341b9b23af4a" package="Default">
    <include line="3" type="Require Once" package="Default">
      <name>std_api.php</name>
    </include>
    <include line="4" type="Include" package="Default">
      <name>config.php</name>
    </include>
    <include line="5" type="Include" package="Default">
      <name>admin_dir.php</name>
    </include>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file assets\php\file_util.php</error>
    </parse_markers>
  </file>
  <file path="assets\php\hurricane-get.php" hash="bf3ccdf53089820ab005df49cec1035e" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file assets\php\hurricane-get.php</error>
    </parse_markers>
  </file>
  <file path="assets\php\msg_templates.php" hash="df2d1727b272ac8f7b00efd8775c40d2" package="Default">
    <function namespace="global" line="13" package="Default">
      <name>genMessage</name>
      <full_name>\genMessage</full_name>
      <docblock line="2">
        <description>Generates a string message based on templates.</description>
        <long-description>&lt;p&gt;This provides
access to all automatically generated messages in the DynaSearch
system.&lt;/p&gt;</long-description>
        <tag line="2" name="param" description="- message template" type="string" variable="$template">
          <type by_reference="false">string</type>
        </tag>
        <tag line="2" name="param" description="- variables for use in the template" type="array" variable="$args">
          <type by_reference="false">array</type>
        </tag>
        <tag line="2" name="return" description="- message formated based on template with custom&#13;&#10;                 variable values" type="string">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <argument line="13">
        <name>$template</name>
        <default></default>
        <type/>
      </argument>
      <argument line="13">
        <name>$args</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file assets\php\msg_templates.php</error>
    </parse_markers>
  </file>
  <file path="assets\php\nav.php" hash="7fecb024cfd1a4f68eaaab2f625db7bb" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file assets\php\nav.php</error>
    </parse_markers>
  </file>
  <file path="assets\php\PasswordHash.php" hash="b2ad33513c91fbb893bfd064733e6066" package="Default">
    <constant namespace="global" line="10" package="Default">
      <name>PBKDF2_HASH_ALGORITHM</name>
      <full_name>\PBKDF2_HASH_ALGORITHM</full_name>
      <value>"sha256"</value>
    </constant>
    <constant namespace="global" line="11" package="Default">
      <name>PBKDF2_ITERATIONS</name>
      <full_name>\PBKDF2_ITERATIONS</full_name>
      <value>1000</value>
    </constant>
    <constant namespace="global" line="12" package="Default">
      <name>PBKDF2_SALT_BYTES</name>
      <full_name>\PBKDF2_SALT_BYTES</full_name>
      <value>24</value>
    </constant>
    <constant namespace="global" line="13" package="Default">
      <name>PBKDF2_HASH_BYTES</name>
      <full_name>\PBKDF2_HASH_BYTES</full_name>
      <value>24</value>
    </constant>
    <constant namespace="global" line="15" package="Default">
      <name>HASH_SECTIONS</name>
      <full_name>\HASH_SECTIONS</full_name>
      <value>4</value>
    </constant>
    <constant namespace="global" line="16" package="Default">
      <name>HASH_ALGORITHM_INDEX</name>
      <full_name>\HASH_ALGORITHM_INDEX</full_name>
      <value>0</value>
    </constant>
    <constant namespace="global" line="17" package="Default">
      <name>HASH_ITERATION_INDEX</name>
      <full_name>\HASH_ITERATION_INDEX</full_name>
      <value>1</value>
    </constant>
    <constant namespace="global" line="18" package="Default">
      <name>HASH_SALT_INDEX</name>
      <full_name>\HASH_SALT_INDEX</full_name>
      <value>2</value>
    </constant>
    <constant namespace="global" line="19" package="Default">
      <name>HASH_PBKDF2_INDEX</name>
      <full_name>\HASH_PBKDF2_INDEX</full_name>
      <value>3</value>
    </constant>
    <function namespace="global" line="21" package="Default">
      <name>create_hash</name>
      <full_name>\create_hash</full_name>
      <argument line="21">
        <name>$password</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="36" package="Default">
      <name>validate_password</name>
      <full_name>\validate_password</full_name>
      <argument line="36">
        <name>$password</name>
        <default></default>
        <type/>
      </argument>
      <argument line="36">
        <name>$good_hash</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="56" package="Default">
      <name>slow_equals</name>
      <full_name>\slow_equals</full_name>
      <argument line="56">
        <name>$a</name>
        <default></default>
        <type/>
      </argument>
      <argument line="56">
        <name>$b</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="81" package="Default">
      <name>pbkdf2</name>
      <full_name>\pbkdf2</full_name>
      <argument line="81">
        <name>$algorithm</name>
        <default></default>
        <type/>
      </argument>
      <argument line="81">
        <name>$password</name>
        <default></default>
        <type/>
      </argument>
      <argument line="81">
        <name>$salt</name>
        <default></default>
        <type/>
      </argument>
      <argument line="81">
        <name>$count</name>
        <default></default>
        <type/>
      </argument>
      <argument line="81">
        <name>$key_length</name>
        <default></default>
        <type/>
      </argument>
      <argument line="81">
        <name>$raw_output</name>
        <default>false</default>
        <type/>
      </argument>
    </function>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file assets\php\PasswordHash.php</error>
      <error line="21" code="50009">No DocBlock was found for function \create_hash()</error>
      <error line="36" code="50009">No DocBlock was found for function \validate_password()</error>
      <error line="56" code="50009">No DocBlock was found for function \slow_equals()</error>
      <error line="81" code="50009">No DocBlock was found for function \pbkdf2()</error>
    </parse_markers>
  </file>
  <file path="assets\php\save_survey.php" hash="11a7abf6a7b0ca0f2badfbc90e15a181" package="Default">
    <include line="3" type="Include" package="Default">
      <name>config.php</name>
    </include>
    <include line="4" type="Include" package="Default">
      <name>std_api.php</name>
    </include>
    <include line="8" type="Include" package="Default">
      <name>db_util.php</name>
    </include>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file assets\php\save_survey.php</error>
    </parse_markers>
  </file>
  <file path="assets\php\save_training.php" hash="069e710c7ab47f3fec55c74348217148" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file assets\php\save_training.php</error>
    </parse_markers>
  </file>
  <file path="assets\php\standard.php" hash="47c5bc79ef4755bd5d1f16e6d02c865a" package="Default">
    <include line="2" type="Require Once" package="Default">
      <name>assets/php/std_api.php</name>
    </include>
    <include line="3" type="Require Once" package="Default">
      <name>assets/php/config.php</name>
    </include>
    <include line="4" type="Require Once" package="Default">
      <name>assets/php/db_util.php</name>
    </include>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file assets\php\standard.php</error>
    </parse_markers>
  </file>
  <file path="assets\php\std_api.php" hash="e41f889969d57e7eeb6116232bb4d32a" package="Default">
    <include line="137" type="Include Once" package="Default">
      <name>../securimage/securimage.php</name>
    </include>
    <function namespace="global" line="22" package="Default">
      <name>redirect</name>
      <full_name>\redirect</full_name>
      <argument line="22">
        <name>$page_name</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="29" package="Default">
      <name>fileSizeStr</name>
      <full_name>\fileSizeStr</full_name>
      <argument line="29">
        <name>$size</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="44" package="Default">
      <name>strToHex</name>
      <full_name>\strToHex</full_name>
      <argument line="44">
        <name>$string</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="55" package="Default">
      <name>hexToStr</name>
      <full_name>\hexToStr</full_name>
      <argument line="55">
        <name>$hex</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="66" package="Default">
      <name>randString</name>
      <full_name>\randString</full_name>
      <argument line="67">
        <name>$length</name>
        <default>32</default>
        <type/>
      </argument>
      <argument line="68">
        <name>$chars</name>
        <default>"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"</default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="83" package="Default">
      <name>ifSetElse</name>
      <full_name>\ifSetElse</full_name>
      <argument line="83">
        <name>$var</name>
        <default></default>
        <type/>
      </argument>
      <argument line="83">
        <name>$val</name>
        <default>''</default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="94" package="Default">
      <name>genBaseUrl</name>
      <full_name>\genBaseUrl</full_name>
    </function>
    <function namespace="global" line="105" package="Default">
      <name>genExpiration</name>
      <full_name>\genExpiration</full_name>
      <argument line="105">
        <name>$lifetime</name>
        <default>360</default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="112" package="Default">
      <name>genPasswordResetUrl</name>
      <full_name>\genPasswordResetUrl</full_name>
      <argument line="112">
        <name>$userId</name>
        <default></default>
        <type/>
      </argument>
      <argument line="112">
        <name>$expiration</name>
        <default>null</default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="131" package="Default">
      <name>validateCaptcha</name>
      <full_name>\validateCaptcha</full_name>
      <argument line="131">
        <name>$captchaCode</name>
        <default>null</default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="152" package="Default">
      <name>parseExperimentData</name>
      <full_name>\parseExperimentData</full_name>
      <docblock line="143">
        <description>Parses the hex encoded experiment string into an array where each
index corresponds to a page, and contains an associated array of
that page's values</description>
        <long-description></long-description>
        <tag line="143" name="param" description="- the hex encoded experiment string" type="string" variable="$expdata">
          <type by_reference="false">string</type>
        </tag>
        <tag line="143" name="return" description="- contains each page as an associated array" type="array">
          <type by_reference="false">array</type>
        </tag>
      </docblock>
      <argument line="152">
        <name>$expData</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="184" package="Default">
      <name>getAdminExps</name>
      <full_name>\getAdminExps</full_name>
      <argument line="184">
        <name>$username</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="200" package="Default">
      <name>getAdminParticipants</name>
      <full_name>\getAdminParticipants</full_name>
      <argument line="200">
        <name>$username</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="216" package="Default">
      <name>getAdminQuests</name>
      <full_name>\getAdminQuests</full_name>
      <argument line="216">
        <name>$username</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="233" package="Default">
      <name>getAdminSizeProfiles</name>
      <full_name>\getAdminSizeProfiles</full_name>
      <argument line="233">
        <name>$username</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <markers>
      <todo line="4">IS THIS A BAD IDEA?</todo>
      <todo line="254">: the following should be worked out</todo>
    </markers>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file assets\php\std_api.php</error>
      <error line="22" code="50009">No DocBlock was found for function \redirect()</error>
      <error line="29" code="50009">No DocBlock was found for function \fileSizeStr()</error>
      <error line="44" code="50009">No DocBlock was found for function \strToHex()</error>
      <error line="55" code="50009">No DocBlock was found for function \hexToStr()</error>
      <error line="66" code="50009">No DocBlock was found for function \randString()</error>
      <error line="83" code="50009">No DocBlock was found for function \ifSetElse()</error>
      <error line="94" code="50009">No DocBlock was found for function \genBaseUrl()</error>
      <error line="105" code="50009">No DocBlock was found for function \genExpiration()</error>
      <error line="112" code="50009">No DocBlock was found for function \genPasswordResetUrl()</error>
      <error line="131" code="50009">No DocBlock was found for function \validateCaptcha()</error>
      <error line="143" code="50014">Name of argument $expData does not match with the DocBlock's name $expdata in \parseExperimentData()</error>
      <notice line="143" code="50013">Parameter $expdata could not be found in \parseExperimentData()</notice>
      <error line="184" code="50009">No DocBlock was found for function \getAdminExps()</error>
      <error line="200" code="50009">No DocBlock was found for function \getAdminParticipants()</error>
      <error line="216" code="50009">No DocBlock was found for function \getAdminQuests()</error>
      <error line="233" code="50009">No DocBlock was found for function \getAdminSizeProfiles()</error>
    </parse_markers>
  </file>
  <file path="assets\php\user.php" hash="726b65558fd7a28496b6532fd9e3b5d5" package="Default">
    <include line="4" type="Require Once" package="Default">
      <name>config.php</name>
    </include>
    <include line="5" type="Require Once" package="Default">
      <name>std_api.php</name>
    </include>
    <include line="6" type="Require Once" package="Default">
      <name>msg_templates.php</name>
    </include>
    <include line="7" type="Include" package="Default">
      <name>PasswordHash.php</name>
    </include>
    <function namespace="global" line="22" package="Default">
      <name>user_signin</name>
      <full_name>\user_signin</full_name>
      <docblock line="10">
        <description>Validates a user login to the database using a username and
password.</description>
        <long-description></long-description>
        <tag line="10" name="param" description="- username corresponding to the field&#13;&#10;   'User_ID' in the table 't_users'" type="string" variable="$username">
          <type by_reference="false">string</type>
        </tag>
        <tag line="10" name="param" description="- user password" type="string" variable="$password">
          <type by_reference="false">string</type>
        </tag>
        <tag line="10" name="return" description="- False if either parameter is empty, the username&#13;&#10;   is not found in the database, or password validation fails.&#13;&#10;   Otherwise returbs true." type="boolean">
          <type by_reference="false">boolean</type>
        </tag>
      </docblock>
      <argument line="22">
        <name>$username</name>
        <default></default>
        <type/>
      </argument>
      <argument line="22">
        <name>$password</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <markers>
      <todo line="115"></todo>
      <todo line="196">should not get here, its a problem</todo>
    </markers>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file assets\php\user.php</error>
    </parse_markers>
  </file>
  <file path="assets\securimage\examples\display_value.php" hash="9775a2dde3a8528587e3f977a2b64b74" package="Default">
    <docblock line="3">
      <description>Display Value Captcha Example
2012-04-18</description>
      <long-description></long-description>
      <tag line="3" name="version" description="3.2RC2 (April 2012)&#13;&#10;This example shows how to use the &quot;display_value&quot; option in Securimage which&#13;&#10;allows the application to define the code that will be displayed on the&#13;&#10;captcha image.&#13;&#10;Note: This value is not stored in the session or database!  The display_value&#13;&#10;parameter would be used by a 3rd party application that uses Securimage only&#13;&#10;to display captcha images, but generates and manages the codes independently."/>
    </docblock>
    <include line="23" type="Require Once" package="Default">
      <name>../securimage.php</name>
    </include>
  </file>
  <file path="assets\securimage\examples\securimage_show_example.php" hash="05222571b452a87d35a64a1f7dbc1a55" package="Securimage">
    <docblock line="3">
      <description>Project:     Securimage: A PHP class for creating and managing form CAPTCHA images&lt;br /&gt;
File:        securimage_show_example.php&lt;br /&gt;</description>
      <long-description>&lt;p&gt;Copyright (c) 2012, Drew Phillips
All rights reserved.&lt;/p&gt;

&lt;p&gt;Redistribution and use in source and binary forms, with or without modification,
are permitted provided that the following conditions are met:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Redistributions of source code must retain the above copyright notice,
this list of conditions and the following disclaimer.&lt;/li&gt;
&lt;li&gt;Redistributions in binary form must reproduce the above copyright notice,
this list of conditions and the following disclaimer in the documentation
and/or other materials provided with the distribution.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
POSSIBILITY OF SUCH DAMAGE.&lt;/p&gt;

&lt;p&gt;Any modifications to the library should be indicated clearly in the source code
to inform users that the changes are not a part of the original software.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;If you found this script useful, please take a quick moment to rate it.&lt;br /&gt;
http://www.hotscripts.com/rate/49400.html  Thanks.&lt;/p&gt;</long-description>
      <tag line="3" name="link" description="Securimage PHP CAPTCHA" link="http://www.phpcaptcha.org"/>
      <tag line="3" name="link" description="Download Latest Version" link="http://www.phpcaptcha.org/latest.zip"/>
      <tag line="3" name="link" description="Online Documentation" link="http://www.phpcaptcha.org/Securimage_Docs/"/>
      <tag line="3" name="copyright" description="2012 Drew Phillips"/>
      <tag line="3" name="author" description="Drew Phillips &lt;drew@drew-phillips.com&gt;"/>
      <tag line="3" name="version" description="3.2RC2 (April 2012)"/>
      <tag line="3" name="package" description="Securimage"/>
    </docblock>
    <include line="47" type="Require Once" package="Default">
      <name>../securimage.php</name>
    </include>
  </file>
  <file path="assets\securimage\examples\securimage_show_example2.php" hash="aedbda17d3e7c5365fbf084214cda879" package="Securimage">
    <docblock line="3">
      <description>Project:     Securimage: A PHP class for creating and managing form CAPTCHA images&lt;br /&gt;
File:        securimage_show_example2.php&lt;br /&gt;</description>
      <long-description>&lt;p&gt;Copyright (c) 2012, Drew Phillips
All rights reserved.&lt;/p&gt;

&lt;p&gt;Redistribution and use in source and binary forms, with or without modification,
are permitted provided that the following conditions are met:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Redistributions of source code must retain the above copyright notice,
this list of conditions and the following disclaimer.&lt;/li&gt;
&lt;li&gt;Redistributions in binary form must reproduce the above copyright notice,
this list of conditions and the following disclaimer in the documentation
and/or other materials provided with the distribution.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
POSSIBILITY OF SUCH DAMAGE.&lt;/p&gt;

&lt;p&gt;Any modifications to the library should be indicated clearly in the source code
to inform users that the changes are not a part of the original software.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;If you found this script useful, please take a quick moment to rate it.&lt;br /&gt;
http://www.hotscripts.com/rate/49400.html  Thanks.&lt;/p&gt;</long-description>
      <tag line="3" name="link" description="Securimage PHP CAPTCHA" link="http://www.phpcaptcha.org"/>
      <tag line="3" name="link" description="Download Latest Version" link="http://www.phpcaptcha.org/latest.zip"/>
      <tag line="3" name="link" description="Online Documentation" link="http://www.phpcaptcha.org/Securimage_Docs/"/>
      <tag line="3" name="copyright" description="2012 Drew Phillips"/>
      <tag line="3" name="author" description="Drew Phillips &lt;drew@drew-phillips.com&gt;"/>
      <tag line="3" name="version" description="3.2RC2 (April 2012)"/>
      <tag line="3" name="package" description="Securimage"/>
    </docblock>
    <include line="47" type="Require Once" package="Default">
      <name>../securimage.php</name>
    </include>
  </file>
  <file path="assets\securimage\examples\static_captcha.php" hash="d9b9ecf99de6adddd2f2a476a3c16f1a" package="Default">
    <docblock line="3">
      <description>Static Captcha Example Script
2012-04-18</description>
      <long-description></long-description>
      <tag line="3" name="version" description="3.2RC2 (April 2012)&#13;&#10;The static captcha exposes an easy to use interface that applications can&#13;&#10;use to generate captcha challenges and validate them by a unique ID.  A&#13;&#10;captcha image can be associated with an ID and no PHP sessions are required.&#13;&#10;The captcha ID can be stored in a SQLite database by Securimage.&#13;&#10;Tip: To give the user a refresh captcha button, use Ajax to request a new ID,&#13;&#10;update the hidden form input with the new captcha ID, and update the image source&#13;&#10;to securimage_show.php providing the captcha ID."/>
    </docblock>
    <include line="23" type="Require Once" package="Default">
      <name>../securimage.php</name>
    </include>
  </file>
  <file path="assets\securimage\example_form.ajax.php" hash="5516e8a2b7d5c30a72d5452547c799f5" package="Default">
    <include line="175" type="Require Once" package="Default">
      <name/>
    </include>
    <function namespace="global" line="128" package="Default">
      <name>process_si_contact_form</name>
      <full_name>\process_si_contact_form</full_name>
    </function>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file assets\securimage\example_form.ajax.php</error>
      <error line="128" code="50009">No DocBlock was found for function \process_si_contact_form()</error>
    </parse_markers>
  </file>
  <file path="assets\securimage\example_form.php" hash="d8f2658b10167af0451ec6a4e461e9d6" package="Default">
    <include line="145" type="Require Once" package="Default">
      <name/>
    </include>
    <function namespace="global" line="96" package="Default">
      <name>process_si_contact_form</name>
      <full_name>\process_si_contact_form</full_name>
    </function>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file assets\securimage\example_form.php</error>
      <error line="96" code="50009">No DocBlock was found for function \process_si_contact_form()</error>
    </parse_markers>
  </file>
  <file path="assets\securimage\securimage.php" hash="3e89de518457563c264a67f5ea38d30b" package="Securimage">
    <docblock line="5">
      <description>Project:     Securimage: A PHP class for creating and managing form CAPTCHA images&lt;br /&gt;
File:        securimage.php&lt;br /&gt;</description>
      <long-description>&lt;p&gt;Copyright (c) 2012, Drew Phillips
All rights reserved.&lt;/p&gt;

&lt;p&gt;Redistribution and use in source and binary forms, with or without modification,
are permitted provided that the following conditions are met:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Redistributions of source code must retain the above copyright notice,
this list of conditions and the following disclaimer.&lt;/li&gt;
&lt;li&gt;Redistributions in binary form must reproduce the above copyright notice,
this list of conditions and the following disclaimer in the documentation
and/or other materials provided with the distribution.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
POSSIBILITY OF SUCH DAMAGE.&lt;/p&gt;

&lt;p&gt;Any modifications to the library should be indicated clearly in the source code
to inform users that the changes are not a part of the original software.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;If you found this script useful, please take a quick moment to rate it.&lt;br /&gt;
http://www.hotscripts.com/rate/49400.html  Thanks.&lt;/p&gt;</long-description>
      <tag line="5" name="link" description="Securimage PHP CAPTCHA" link="http://www.phpcaptcha.org"/>
      <tag line="5" name="link" description="Download Latest Version" link="http://www.phpcaptcha.org/latest.zip"/>
      <tag line="5" name="link" description="Online Documentation" link="http://www.phpcaptcha.org/Securimage_Docs/"/>
      <tag line="5" name="copyright" description="2012 Drew Phillips"/>
      <tag line="5" name="author" description="Drew Phillips &lt;drew@drew-phillips.com&gt;"/>
      <tag line="5" name="version" description="3.2RC3 (May 2012)"/>
      <tag line="5" name="package" description="Securimage"/>
    </docblock>
    <include line="716" type="Require Once" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="global" line="150" package="Securimage\classes">
      <extends/>
      <name>Securimage</name>
      <full_name>\Securimage</full_name>
      <docblock line="141">
        <description>Securimage CAPTCHA Class.</description>
        <long-description></long-description>
        <tag line="141" name="version" description="3.0"/>
        <tag line="141" name="package" description="Securimage"/>
        <tag line="141" name="subpackage" description="classes"/>
        <tag line="141" name="author" description="Drew Phillips &lt;drew@drew-phillips.com&gt;"/>
      </docblock>
      <constant namespace="global" line="160" package="Securimage\classes">
        <name>SI_IMAGE_JPEG</name>
        <full_name>SI_IMAGE_JPEG</full_name>
        <value>1</value>
        <docblock line="156">
          <description>Renders captcha as a JPEG image</description>
          <long-description></long-description>
          <tag line="156" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="165" package="Securimage\classes">
        <name>SI_IMAGE_PNG</name>
        <full_name>SI_IMAGE_PNG</full_name>
        <value>2</value>
        <docblock line="161">
          <description>Renders captcha as a PNG image (default)</description>
          <long-description></long-description>
          <tag line="161" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="170" package="Securimage\classes">
        <name>SI_IMAGE_GIF</name>
        <full_name>SI_IMAGE_GIF</full_name>
        <value>3</value>
        <docblock line="166">
          <description>Renders captcha as a GIF image</description>
          <long-description></long-description>
          <tag line="166" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="176" package="Securimage\classes">
        <name>SI_CAPTCHA_STRING</name>
        <full_name>SI_CAPTCHA_STRING</full_name>
        <value>0</value>
        <docblock line="172">
          <description>Create a normal alphanumeric captcha</description>
          <long-description></long-description>
          <tag line="172" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="181" package="Securimage\classes">
        <name>SI_CAPTCHA_MATHEMATIC</name>
        <full_name>SI_CAPTCHA_MATHEMATIC</full_name>
        <value>1</value>
        <docblock line="177">
          <description>Create a captcha consisting of a simple math problem</description>
          <long-description></long-description>
          <tag line="177" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </constant>
      <property final="false" static="false" visibility="public" line="187" namespace="global" package="Default">
        <name>$image_width</name>
        <default>215</default>
        <docblock line="183">
          <description>The width of the captcha image</description>
          <long-description></long-description>
          <tag line="183" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="192" namespace="global" package="Default">
        <name>$image_height</name>
        <default>80</default>
        <docblock line="188">
          <description>The height of the captcha image</description>
          <long-description></long-description>
          <tag line="188" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="197" namespace="global" package="Default">
        <name>$image_type</name>
        <default>self::SI_IMAGE_PNG</default>
        <docblock line="193">
          <description>The type of the image, default = png</description>
          <long-description></long-description>
          <tag line="193" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="203" namespace="global" package="Default">
        <name>$image_bg_color</name>
        <default>'#ffffff'</default>
        <docblock line="199">
          <description>The background color of the captcha</description>
          <long-description></long-description>
          <tag line="199" name="var" description="" type="\Securimage_Color">
            <type by_reference="false">\Securimage_Color</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="208" namespace="global" package="Default">
        <name>$text_color</name>
        <default>'#707070'</default>
        <docblock line="204">
          <description>The color of the captcha text</description>
          <long-description></long-description>
          <tag line="204" name="var" description="" type="\Securimage_Color">
            <type by_reference="false">\Securimage_Color</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="213" namespace="global" package="Default">
        <name>$line_color</name>
        <default>'#707070'</default>
        <docblock line="209">
          <description>The color of the lines over the captcha</description>
          <long-description></long-description>
          <tag line="209" name="var" description="" type="\Securimage_Color">
            <type by_reference="false">\Securimage_Color</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="218" namespace="global" package="Default">
        <name>$noise_color</name>
        <default>'#707070'</default>
        <docblock line="214">
          <description>The color of the noise that is drawn</description>
          <long-description></long-description>
          <tag line="214" name="var" description="" type="\Securimage_Color">
            <type by_reference="false">\Securimage_Color</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="224" namespace="global" package="Default">
        <name>$text_transparency_percentage</name>
        <default>50</default>
        <docblock line="220">
          <description>How transparent to make the text 0 = completely opaque, 100 = invisible</description>
          <long-description></long-description>
          <tag line="220" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="229" namespace="global" package="Default">
        <name>$use_transparent_text</name>
        <default>false</default>
        <docblock line="225">
          <description>Whether or not to draw the text transparently, true = use transparency, false = no transparency</description>
          <long-description></long-description>
          <tag line="225" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="235" namespace="global" package="Default">
        <name>$code_length</name>
        <default>6</default>
        <docblock line="231">
          <description>The length of the captcha code</description>
          <long-description></long-description>
          <tag line="231" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="240" namespace="global" package="Default">
        <name>$case_sensitive</name>
        <default>false</default>
        <docblock line="236">
          <description>Whether the captcha should be case sensitive (not recommended, use only for maximum protection)</description>
          <long-description></long-description>
          <tag line="236" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="245" namespace="global" package="Default">
        <name>$charset</name>
        <default>'ABCDEFGHKLMNPRSTUVWYZabcdefghklmnprstuvwyz23456789'</default>
        <docblock line="241">
          <description>The character set to use for generating the captcha code</description>
          <long-description></long-description>
          <tag line="241" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="250" namespace="global" package="Default">
        <name>$expiry_time</name>
        <default>900</default>
        <docblock line="246">
          <description>How long in seconds a captcha remains valid, after this time it will not be accepted</description>
          <long-description></long-description>
          <tag line="246" name="var" description="" type="\unknown_type">
            <type by_reference="false">\unknown_type</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="257" namespace="global" package="Default">
        <name>$session_name</name>
        <default>null</default>
        <docblock line="252">
          <description>The session name securimage should use, only set this if your application uses a custom session name
It is recommended to set this value below so it is used by all securimage scripts</description>
          <long-description></long-description>
          <tag line="252" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="263" namespace="global" package="Default">
        <name>$use_wordlist</name>
        <default>false</default>
        <docblock line="259">
          <description>true to use the wordlist file, false to generate random captcha codes</description>
          <long-description></long-description>
          <tag line="259" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="269" namespace="global" package="Default">
        <name>$perturbation</name>
        <default>0.75</default>
        <docblock line="265">
          <description>The level of distortion, 0.75 = normal, 1.0 = very high distortion</description>
          <long-description></long-description>
          <tag line="265" name="var" description="" type="double">
            <type by_reference="false">double</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="274" namespace="global" package="Default">
        <name>$num_lines</name>
        <default>8</default>
        <docblock line="270">
          <description>How many lines to draw over the captcha code to increase security</description>
          <long-description></long-description>
          <tag line="270" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="279" namespace="global" package="Default">
        <name>$noise_level</name>
        <default>0</default>
        <docblock line="275">
          <description>The level of noise (random dots) to place on the image, 0-10</description>
          <long-description></long-description>
          <tag line="275" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="285" namespace="global" package="Default">
        <name>$image_signature</name>
        <default>''</default>
        <docblock line="281">
          <description>The signature text to draw on the bottom corner of the image</description>
          <long-description></long-description>
          <tag line="281" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="290" namespace="global" package="Default">
        <name>$signature_color</name>
        <default>'#707070'</default>
        <docblock line="286">
          <description>The color of the signature text</description>
          <long-description></long-description>
          <tag line="286" name="var" description="" type="\Securimage_Color">
            <type by_reference="false">\Securimage_Color</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="295" namespace="global" package="Default">
        <name>$signature_font</name>
        <default></default>
        <docblock line="291">
          <description>The path to the ttf font file to use for the signature text, defaults to $ttf_file (AHGBold.ttf)</description>
          <long-description></long-description>
          <tag line="291" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="301" namespace="global" package="Default">
        <name>$use_sqlite_db</name>
        <default>false</default>
        <docblock line="297">
          <description>Use an SQLite database to store data (for users that do not support cookies)</description>
          <long-description></long-description>
          <tag line="297" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="308" namespace="global" package="Default">
        <name>$captcha_type</name>
        <default>self::SI_CAPTCHA_STRING</default>
        <docblock line="303">
          <description>The type of captcha to create, either alphanumeric, or a math problem&lt;br /&gt;
Securimage::SI_CAPTCHA_STRING or Securimage::SI_CAPTCHA_MATHEMATIC</description>
          <long-description></long-description>
          <tag line="303" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="325" namespace="global" package="Default">
        <name>$namespace</name>
        <default></default>
        <docblock line="310">
          <description>The captcha namespace, use this if you have multiple forms on a single page, blank if you do not use multiple forms on one page</description>
          <long-description></long-description>
          <tag line="310" name="var" description="&lt;code&gt; &lt;?php // in securimage_show.php (create one show script for each form) $img-&gt;namespace = 'contact_form'; // in form validator $img-&gt;namespace = 'contact_form'; if ($img-&gt;check($code) == true) { echo &quot;Valid!&quot;; } &lt;/code&gt;" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="331" namespace="global" package="Default">
        <name>$ttf_file</name>
        <default></default>
        <docblock line="327">
          <description>The font file to use to draw the captcha code, leave blank for default font AHGBold.ttf</description>
          <long-description></long-description>
          <tag line="327" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="336" namespace="global" package="Default">
        <name>$wordlist_file</name>
        <default></default>
        <docblock line="332">
          <description>The path to the wordlist file to use, leave blank for default words/words.txt</description>
          <long-description></long-description>
          <tag line="332" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="341" namespace="global" package="Default">
        <name>$background_directory</name>
        <default></default>
        <docblock line="337">
          <description>The directory to scan for background images, if set a random background will be chosen from this folder</description>
          <long-description></long-description>
          <tag line="337" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="346" namespace="global" package="Default">
        <name>$sqlite_database</name>
        <default></default>
        <docblock line="342">
          <description>The path to the SQLite database file to use, if $use_sqlite_database = true, should be chmod 666</description>
          <long-description></long-description>
          <tag line="342" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="354" namespace="global" package="Default">
        <name>$audio_path</name>
        <default></default>
        <docblock line="347">
          <description>The path to the securimage audio directory, can be set in securimage_play.php</description>
          <long-description></long-description>
          <tag line="347" name="var" description="&lt;code&gt; $img-&gt;audio_path = '/home/yoursite/public_html/securimage/audio/'; &lt;/code&gt;" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="361" namespace="global" package="Default">
        <name>$audio_noise_path</name>
        <default></default>
        <docblock line="355">
          <description>The path to the directory containing audio files that will be selected
randomly and mixed with the captcha audio.</description>
          <long-description></long-description>
          <tag line="355" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="371" namespace="global" package="Default">
        <name>$audio_use_noise</name>
        <default></default>
        <docblock line="362">
          <description>Whether or not to mix background noise files into captcha audio (true = mix, false = no)
Mixing random background audio with noise can help improve security of audio captcha.</description>
          <long-description>&lt;p&gt;Default: securimage/audio/noise&lt;/p&gt;</long-description>
          <tag line="362" name="since" description="3.0.3"/>
          <tag line="362" name="see" description="\Securimage::$audio_noise_path" refers="\Securimage::$audio_noise_path"/>
          <tag line="362" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="393" namespace="global" package="Default">
        <name>$audio_mix_normalization</name>
        <default>0.6</default>
        <docblock line="372">
          <description>The method and threshold (or gain factor) used to normalize the mixing with background noise.</description>
          <long-description>&lt;p&gt;See http://www.voegler.eu/pub/audio/ for more information.&lt;/p&gt;

&lt;p&gt;Valid:&lt;/p&gt;

&lt;ul&gt;
    &lt;li&gt; &gt;= 1 - Normalize by multiplying by the threshold (boost - positive gain). &lt;br /&gt;
           A value of 1 in effect means no normalization (and results in clipping). &lt;/li&gt;
    &lt;li&gt; &lt;= -1 - Normalize by dividing by the the absolute value of threshold (attenuate - negative gain). &lt;br /&gt;
           A factor of 2 (-2) is about 6dB reduction in volume.&lt;/li&gt;
    &lt;li&gt; [0, 1) - (open inverval - not including 1) - The threshold
           above which amplitudes are comressed logarithmically. &lt;br /&gt;
           e.g. 0.6 to leave amplitudes up to 60% "as is" and compress above. &lt;/li&gt;
    &lt;li&gt; (-1, 0) - (open inverval - not including -1 and 0) - The threshold
           above which amplitudes are comressed linearly. &lt;br /&gt;
           e.g. -0.6 to leave amplitudes up to 60% "as is" and compress above. &lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;Default: 0.6&lt;/p&gt;</long-description>
          <tag line="372" name="since" description="3.0.4"/>
          <tag line="372" name="var" description="" type="float">
            <type by_reference="false">float</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="401" namespace="global" package="Default">
        <name>$degrade_audio</name>
        <default></default>
        <docblock line="394">
          <description>Whether or not to degrade audio by introducing random noise (improves security of audio captcha)
Default: true</description>
          <long-description></long-description>
          <tag line="394" name="since" description="3.0.3"/>
          <tag line="394" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="408" namespace="global" package="Default">
        <name>$audio_gap_min</name>
        <default>0</default>
        <docblock line="402">
          <description>Minimum delay to insert between captcha audio letters in milliseconds</description>
          <long-description></long-description>
          <tag line="402" name="since" description="3.0.3"/>
          <tag line="402" name="var" description="" type="float">
            <type by_reference="false">float</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="415" namespace="global" package="Default">
        <name>$audio_gap_max</name>
        <default>600</default>
        <docblock line="409">
          <description>Maximum delay to insert between captcha audio letters in milliseconds</description>
          <long-description></long-description>
          <tag line="409" name="since" description="3.0.3"/>
          <tag line="409" name="var" description="" type="float">
            <type by_reference="false">float</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="protected" line="421" namespace="global" package="Default">
        <name>$_captchaId</name>
        <default>null</default>
        <docblock line="417">
          <description>Captcha ID if using static captcha</description>
          <long-description></long-description>
          <tag line="417" name="var" description="Unique captcha id" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="423" namespace="global" package="Default">
        <name>$im</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="protected" line="424" namespace="global" package="Default">
        <name>$tmpimg</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="protected" line="425" namespace="global" package="Default">
        <name>$bgimg</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="protected" line="426" namespace="global" package="Default">
        <name>$iscale</name>
        <default>5</default>
      </property>
      <property final="false" static="false" visibility="protected" line="428" namespace="global" package="Default">
        <name>$securimage_path</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="435" namespace="global" package="Default">
        <name>$code</name>
        <default></default>
        <docblock line="430">
          <description>The captcha challenge value (either the case-sensitive/insensitive word captcha, or the solution to the math captcha)</description>
          <long-description></long-description>
          <tag line="430" name="var" description="Captcha challenge value" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="442" namespace="global" package="Default">
        <name>$code_display</name>
        <default></default>
        <docblock line="437">
          <description>The display value of the captcha to draw on the image (the word captcha, or the math equation to present to the user)</description>
          <long-description></long-description>
          <tag line="437" name="var" description="Captcha display value to draw on the image" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="452" namespace="global" package="Default">
        <name>$display_value</name>
        <default></default>
        <docblock line="444">
          <description>A value that can be passed to the constructor that can be used to generate a captcha image with a given value
This value does not get stored in the session or database and is only used when calling Securimage::show().</description>
          <long-description>&lt;p&gt;If a display_value was passed to the constructor and the captcha image is generated, the display_value will be used
as the string to draw on the captcha image.  Used only if captcha codes are generated and managed by a 3rd party app/library&lt;/p&gt;</long-description>
          <tag line="444" name="var" description="Captcha code value to display on the image" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="459" namespace="global" package="Default">
        <name>$captcha_code</name>
        <default></default>
        <docblock line="454">
          <description>Captcha code supplied by user [set from Securimage::check()]</description>
          <long-description></long-description>
          <tag line="454" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="466" namespace="global" package="Default">
        <name>$no_exit</name>
        <default></default>
        <docblock line="461">
          <description>Flag that can be specified telling securimage not to call exit after generating a captcha image or audio file</description>
          <long-description></long-description>
          <tag line="461" name="var" description="If true, script will not terminate; if false script will terminate (default)" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="473" namespace="global" package="Default">
        <name>$no_session</name>
        <default></default>
        <docblock line="468">
          <description>Flag indicating whether or not a PHP session should be started and used</description>
          <long-description></long-description>
          <tag line="468" name="var" description="If true, no session will be started; if false, session will be started and used to store data (default)" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="480" namespace="global" package="Default">
        <name>$send_headers</name>
        <default></default>
        <docblock line="475">
          <description>Flag indicating whether or not HTTP headers will be sent when outputting captcha image/audio</description>
          <long-description></long-description>
          <tag line="475" name="var" description="If true (default) headers will be sent, if false, no headers are sent" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="483" namespace="global" package="Default">
        <name>$sqlite_handle</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="protected" line="486" namespace="global" package="Default">
        <name>$gdbgcolor</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="protected" line="487" namespace="global" package="Default">
        <name>$gdtextcolor</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="protected" line="488" namespace="global" package="Default">
        <name>$gdlinecolor</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="protected" line="489" namespace="global" package="Default">
        <name>$gdsignaturecolor</name>
        <default></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="507" package="Securimage\classes">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="491">
          <description>Create a new securimage object, pass options to set in the constructor.&lt;br /&gt;
This can be used to display a captcha, play an audible captcha, or validate an entry</description>
          <long-description></long-description>
          <tag line="491" name="param" description="&lt;code&gt;&#13;&#10;$options = array(&#13;&#10;    'text_color' =&gt; new Securimage_Color('#013020'),&#13;&#10;    'code_length' =&gt; 5,&#13;&#10;    'num_lines' =&gt; 5,&#13;&#10;    'noise_level' =&gt; 3,&#13;&#10;    'font_file' =&gt; Securimage::getPath() . '/custom.ttf'&#13;&#10;);&#13;&#10;$img = new Securimage($options);&#13;&#10;&lt;/code&gt;" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="507">
          <name>$options</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="597" package="Securimage\classes">
        <name>getPath</name>
        <full_name>getPath</full_name>
        <docblock line="593">
          <description>Return the absolute path to the Securimage directory</description>
          <long-description></long-description>
          <tag line="593" name="return" description="The path to the securimage base directory" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="610" package="Securimage\classes">
        <name>getCaptchaId</name>
        <full_name>getCaptchaId</full_name>
        <docblock line="602">
          <description>Generate a new captcha ID or retrieve the current ID</description>
          <long-description></long-description>
          <tag line="602" name="param" description="bool If true, generates a new challenge and returns and ID" type="\" variable="$new"/>
          <tag line="602" name="param" description="array Additional options to be passed to Securimage" type="\" variable="$options"/>
          <tag line="602" name="return" description="Returns null if no captcha id set and new was false, or string captcha ID" type="null|string">
            <type by_reference="false">null</type>
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="610">
          <name>$new</name>
          <default>true</default>
          <type/>
        </argument>
        <argument line="610">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="634" package="Securimage\classes">
        <name>checkByCaptchaId</name>
        <full_name>checkByCaptchaId</full_name>
        <docblock line="627">
          <description>Validate a captcha code input against a captcha ID</description>
          <long-description></long-description>
          <tag line="627" name="param" description="The captcha ID to check" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="627" name="param" description="The captcha value supplied by the user" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="627" name="return" description="true if the code was valid for the given captcha ID, false if not or if database failed to open" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="634">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
        <argument line="634">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="672" package="Securimage\classes">
        <name>show</name>
        <full_name>show</full_name>
        <docblock line="659">
          <description>Used to serve a captcha image to the browser</description>
          <long-description></long-description>
          <tag line="659" name="param" description="The path to the background image to use&#13;&#10;&lt;code&gt;&#13;&#10;$img = new Securimage();&#13;&#10;$img-&gt;code_length = 6;&#13;&#10;$img-&gt;num_lines   = 5;&#13;&#10;$img-&gt;noise_level = 5;&#13;&#10;$img-&gt;show(); // sends the image to browser&#13;&#10;exit;&#13;&#10;&lt;/code&gt;" type="string" variable="$background_image">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="672">
          <name>$background_image</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="696" package="Securimage\classes">
        <name>check</name>
        <full_name>check</full_name>
        <docblock line="683">
          <description>Check a submitted code against the stored value</description>
          <long-description></long-description>
          <tag line="683" name="param" description="The captcha code to check&#13;&#10;&lt;code&gt;&#13;&#10;$code = $_POST['code'];&#13;&#10;$img  = new Securimage();&#13;&#10;if ($img-&gt;check($code) == true) {&#13;&#10;    $captcha_valid = true;&#13;&#10;} else {&#13;&#10;    $captcha_valid = false;&#13;&#10;}&#13;&#10;&lt;/code&gt;" type="string" variable="$code">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="696">
          <name>$code</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="712" package="Securimage\classes">
        <name>outputAudioFile</name>
        <full_name>outputAudioFile</full_name>
        <docblock line="703">
          <description>Output a wav file of the captcha code to the browser</description>
          <long-description>&lt;pre&gt;&lt;code&gt;$img = new Securimage();
$img-&gt;outputAudioFile(); // outputs a wav file to the browser
exit;
&lt;/code&gt;&lt;/pre&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="764" package="Securimage\classes">
        <name>getCode</name>
        <full_name>getCode</full_name>
        <docblock line="758">
          <description>Return the code from the session or sqlite database if used.</description>
          <long-description>&lt;p&gt;If none exists yet, an empty string is returned&lt;/p&gt;</long-description>
          <tag line="758" name="param" description="bool   True to receive an array containing the code and properties" type="\" variable="$array"/>
          <tag line="758" name="return" description="Array if $array = true, otherwise a string containing the code" type="array|string">
            <type by_reference="false">array</type>
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="764">
          <name>$array</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="798" package="Securimage\classes">
        <name>doImage</name>
        <full_name>doImage</full_name>
        <docblock line="795">
          <description>The main image drawing routing, responsible for constructing the entire image and serving it</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="869" package="Securimage\classes">
        <name>allocateColors</name>
        <full_name>allocateColors</full_name>
        <docblock line="866">
          <description>Allocate the colors to be used for the image</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="920" package="Securimage\classes">
        <name>setBackground</name>
        <full_name>setBackground</full_name>
        <docblock line="917">
          <description>The the background color, or background image to be used</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="968" package="Securimage\classes">
        <name>getBackgroundFromDirectory</name>
        <full_name>getBackgroundFromDirectory</full_name>
        <docblock line="965">
          <description>Scan the directory for a background image to use</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="990" package="Securimage\classes">
        <name>createCode</name>
        <full_name>createCode</full_name>
        <docblock line="987">
          <description>Generates the code or math problem and saves the value to the session</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1036" package="Securimage\classes">
        <name>drawWord</name>
        <full_name>drawWord</full_name>
        <docblock line="1033">
          <description>Draws the captcha code on the image</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1074" package="Securimage\classes">
        <name>distortedCopy</name>
        <full_name>distortedCopy</full_name>
        <docblock line="1071">
          <description>Copies the captcha image to the final image with distortion applied</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1125" package="Securimage\classes">
        <name>drawLines</name>
        <full_name>drawLines</full_name>
        <docblock line="1122">
          <description>Draws distorted lines on the image</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1162" package="Securimage\classes">
        <name>drawNoise</name>
        <full_name>drawNoise</full_name>
        <docblock line="1159">
          <description>Draws random noise on the image</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1201" package="Securimage\classes">
        <name>addSignature</name>
        <full_name>addSignature</full_name>
        <docblock line="1198">
          <description>Print signature text on image</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1214" package="Securimage\classes">
        <name>output</name>
        <full_name>output</full_name>
        <docblock line="1211">
          <description>Sends the appropriate image and cache headers and outputs image to the browser</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1261" package="Securimage\classes">
        <name>getAudibleCode</name>
        <full_name>getAudibleCode</full_name>
        <docblock line="1256">
          <description>Gets the code and returns the binary audio file for the stored captcha code</description>
          <long-description></long-description>
          <tag line="1256" name="return" description="audio representation of the captcha in Wav format" type="\The">
            <type by_reference="false">\The</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1300" package="Securimage\classes">
        <name>readCodeFromFile</name>
        <full_name>readCodeFromFile</full_name>
        <docblock line="1297">
          <description>Gets a captcha code from a wordlist</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1328" package="Securimage\classes">
        <name>generateCode</name>
        <full_name>generateCode</full_name>
        <docblock line="1325">
          <description>Generates a random captcha code from the set character set</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1345" package="Securimage\classes">
        <name>validate</name>
        <full_name>validate</full_name>
        <docblock line="1341">
          <description>Checks the entered code against the value stored in the session or sqlite database, handles case sensitivity
Also clears the stored codes if the code was entered correctly to prevent re-use</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1381" package="Securimage\classes">
        <name>saveData</name>
        <full_name>saveData</full_name>
        <docblock line="1378">
          <description>Save data to session namespace and database if used</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1401" package="Securimage\classes">
        <name>saveCodeToDatabase</name>
        <full_name>saveCodeToDatabase</full_name>
        <docblock line="1398">
          <description>Saves the code to the sqlite database</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1432" package="Securimage\classes">
        <name>openDatabase</name>
        <full_name>openDatabase</full_name>
        <docblock line="1429">
          <description>Open sqlite database</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1484" package="Securimage\classes">
        <name>getCodeFromDatabase</name>
        <full_name>getCodeFromDatabase</full_name>
        <docblock line="1477">
          <description>Get a code from the sqlite database for ip address/captchaId.</description>
          <long-description></long-description>
          <tag line="1477" name="return" description="Empty string if no code was found or has expired,&#13;&#10;otherwise returns the stored captcha code.  If a captchaId is set, this&#13;&#10;returns an array with indices &quot;code&quot; and &quot;code_disp&quot;" type="string|array">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1519" package="Securimage\classes">
        <name>clearCodeFromDatabase</name>
        <full_name>clearCodeFromDatabase</full_name>
        <docblock line="1516">
          <description>Remove an entered code from the database</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1532" package="Securimage\classes">
        <name>purgeOldCodesFromDatabase</name>
        <full_name>purgeOldCodesFromDatabase</full_name>
        <docblock line="1529">
          <description>Deletes old codes from sqlite database</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1546" package="Securimage\classes">
        <name>isCodeExpired</name>
        <full_name>isCodeExpired</full_name>
        <docblock line="1542">
          <description>Checks to see if the captcha code has expired and cannot be used</description>
          <long-description></long-description>
          <tag line="1542" name="param" description="" type="\unknown_type" variable="$creation_time">
            <type by_reference="false">\unknown_type</type>
          </tag>
        </docblock>
        <argument line="1546">
          <name>$creation_time</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1565" package="Securimage\classes">
        <name>generateWAV</name>
        <full_name>generateWAV</full_name>
        <docblock line="1559">
          <description>Generate a wav file given the $letters in the code</description>
          <long-description></long-description>
          <tag line="1559" name="todo" description="Add ability to merge 2 sound files together to have random background sounds"/>
          <tag line="1559" name="param" description="" type="array" variable="$letters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1559" name="return" description="The binary contents of the wav file" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1565">
          <name>$letters</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1646" package="Securimage\classes">
        <name>getRandomNoiseFile</name>
        <full_name>getRandomNoiseFile</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1676" package="Securimage\classes">
        <name>audioError</name>
        <full_name>audioError</full_name>
        <docblock line="1671">
          <description>Return a wav file saying there was an error generating file</description>
          <long-description></long-description>
          <tag line="1671" name="return" description="The binary audio contents" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1686" package="Securimage\classes">
        <name>canSendHeaders</name>
        <full_name>canSendHeaders</full_name>
        <docblock line="1681">
          <description>Checks to see if headers can be sent and if any error has been output to the browser</description>
          <long-description></long-description>
          <tag line="1681" name="return" description="true if headers haven't been sent and no output/errors will break audio/images, false if unsafe" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1704" package="Securimage\classes">
        <name>frand</name>
        <full_name>frand</full_name>
        <docblock line="1699">
          <description>Return a random float between 0 and 0.9999</description>
          <long-description></long-description>
          <tag line="1699" name="return" description="Random float between 0 and 0.9999" type="float">
            <type by_reference="false">float</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1714" package="Securimage\classes">
        <name>initColor</name>
        <full_name>initColor</full_name>
        <docblock line="1709">
          <description>Convert an html color code to a Securimage_Color</description>
          <long-description></long-description>
          <tag line="1709" name="param" description="" type="string" variable="$color">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1709" name="param" description="The defalt color to use if $color is invalid" type="\Securimage_Color" variable="$default">
            <type by_reference="false">\Securimage_Color</type>
          </tag>
        </docblock>
        <argument line="1714">
          <name>$color</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1714">
          <name>$default</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1746" package="Securimage\classes">
        <name>errorHandler</name>
        <full_name>errorHandler</full_name>
        <docblock line="1731">
          <description>Error handler used when outputting captcha image or audio.</description>
          <long-description>&lt;p&gt;This error handler helps determine if any errors raised would
prevent captcha image or audio from displaying.  If they have
no effect on the output buffer or headers, true is returned so
the script can continue processing.
See https://github.com/dapphp/securimage/issues/15&lt;/p&gt;</long-description>
          <tag line="1731" name="param" description="" type="int" variable="$errno">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1731" name="param" description="" type="string" variable="$errstr">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1731" name="param" description="" type="string" variable="$errfile">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1731" name="param" description="" type="int" variable="$errline">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1731" name="param" description="" type="array" variable="$errcontext">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1731" name="return" description="true if handled, false if PHP should handle" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="1746">
          <name>$errno</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1746">
          <name>$errstr</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1746">
          <name>$errfile</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="1746">
          <name>$errline</name>
          <default>0</default>
          <type/>
        </argument>
        <argument line="1746">
          <name>$errcontext</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="1770" package="Securimage\classes">
      <extends/>
      <name>Securimage_Color</name>
      <full_name>\Securimage_Color</full_name>
      <docblock line="1761">
        <description>Color object for Securimage CAPTCHA</description>
        <long-description></long-description>
        <tag line="1761" name="version" description="3.0"/>
        <tag line="1761" name="since" description="2.0"/>
        <tag line="1761" name="package" description="Securimage"/>
        <tag line="1761" name="subpackage" description="classes"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="1772" namespace="global" package="Default">
        <name>$r</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="public" line="1773" namespace="global" package="Default">
        <name>$g</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="public" line="1774" namespace="global" package="Default">
        <name>$b</name>
        <default></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1787" package="Securimage\classes">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="1776">
          <description>Create a new Securimage_Color object.&lt;br /&gt;
Constructor expects 1 or 3 arguments.&lt;br /&gt;
When passing a single argument, specify the color using HTML hex format,&lt;br /&gt;
when passing 3 arguments, specify each RGB component (from 0-255) individually.&lt;br /&gt;
$color = new Securimage_Color('#0080FF') or &lt;br /&gt;
$color = new Securimage_Color(0, 128, 255)</description>
          <long-description></long-description>
          <tag line="1776" name="param" description="" type="string" variable="$color">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1776" name="throws" description="" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
        <argument line="1787">
          <name>$color</name>
          <default>'#ffffff'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1823" package="Securimage\classes">
        <name>constructRGB</name>
        <full_name>constructRGB</full_name>
        <docblock line="1817">
          <description>Construct from an rgb triplet</description>
          <long-description></long-description>
          <tag line="1817" name="param" description="The red component, 0-255" type="int" variable="$red">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1817" name="param" description="The green component, 0-255" type="int" variable="$green">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1817" name="param" description="The blue component, 0-255" type="int" variable="$blue">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="1823">
          <name>$red</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1823">
          <name>$green</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1823">
          <name>$blue</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1841" package="Securimage\classes">
        <name>constructHTML</name>
        <full_name>constructHTML</full_name>
        <docblock line="1837">
          <description>Construct from an html hex color code</description>
          <long-description></long-description>
          <tag line="1837" name="param" description="" type="string" variable="$color">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1841">
          <name>$color</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="423" code="50018">No DocBlock was found for property $im</error>
      <error line="424" code="50018">No DocBlock was found for property $tmpimg</error>
      <error line="425" code="50018">No DocBlock was found for property $bgimg</error>
      <error line="426" code="50018">No DocBlock was found for property $iscale</error>
      <error line="428" code="50018">No DocBlock was found for property $securimage_path</error>
      <error line="483" code="50018">No DocBlock was found for property $sqlite_handle</error>
      <error line="486" code="50018">No DocBlock was found for property $gdbgcolor</error>
      <error line="487" code="50018">No DocBlock was found for property $gdtextcolor</error>
      <error line="488" code="50018">No DocBlock was found for property $gdlinecolor</error>
      <error line="489" code="50018">No DocBlock was found for property $gdsignaturecolor</error>
      <error line="602" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $options in getCaptchaId()</error>
      <error line="1646" code="50010">No DocBlock was found for method getRandomNoiseFile()</error>
      <error line="1772" code="50018">No DocBlock was found for property $r</error>
      <error line="1773" code="50018">No DocBlock was found for property $g</error>
      <error line="1774" code="50018">No DocBlock was found for property $b</error>
    </parse_markers>
  </file>
  <file path="assets\securimage\securimage_play.php" hash="60475c6c747e6ae1e63a667e4d4b8f12" package="Securimage">
    <docblock line="3">
      <description>Project:     Securimage: A PHP class for creating and managing form CAPTCHA images&lt;br /&gt;
File:        securimage_play.php&lt;br /&gt;</description>
      <long-description>&lt;p&gt;This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or any later version.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Any modifications to the library should be indicated clearly in the source code
to inform users that the changes are not a part of the original software.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;If you found this script useful, please take a quick moment to rate it.&lt;br /&gt;
http://www.hotscripts.com/rate/49400.html  Thanks.&lt;/p&gt;</long-description>
      <tag line="3" name="link" description="Securimage PHP CAPTCHA" link="http://www.phpcaptcha.org"/>
      <tag line="3" name="link" description="Download Latest Version" link="http://www.phpcaptcha.org/latest.zip"/>
      <tag line="3" name="link" description="Online Documentation" link="http://www.phpcaptcha.org/Securimage_Docs/"/>
      <tag line="3" name="copyright" description="2012 Drew Phillips"/>
      <tag line="3" name="author" description="Drew Phillips &lt;drew@drew-phillips.com&gt;"/>
      <tag line="3" name="version" description="3.2RC2 (April 2012)"/>
      <tag line="3" name="package" description="Securimage"/>
    </docblock>
    <include line="37" type="Require Once" package="Default">
      <name/>
    </include>
  </file>
  <file path="assets\securimage\securimage_show.php" hash="c93d5d0707ed5794dd4260c3a688837f" package="Securimage">
    <docblock line="3">
      <description>Project:     Securimage: A PHP class for creating and managing form CAPTCHA images&lt;br /&gt;
File:        securimage_show.php&lt;br /&gt;</description>
      <long-description>&lt;p&gt;Copyright (c) 2011, Drew Phillips
All rights reserved.&lt;/p&gt;

&lt;p&gt;Redistribution and use in source and binary forms, with or without modification,
are permitted provided that the following conditions are met:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Redistributions of source code must retain the above copyright notice,
this list of conditions and the following disclaimer.&lt;/li&gt;
&lt;li&gt;Redistributions in binary form must reproduce the above copyright notice,
this list of conditions and the following disclaimer in the documentation
and/or other materials provided with the distribution.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
POSSIBILITY OF SUCH DAMAGE.&lt;/p&gt;

&lt;p&gt;Any modifications to the library should be indicated clearly in the source code
to inform users that the changes are not a part of the original software.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;If you found this script useful, please take a quick moment to rate it.&lt;br /&gt;
http://www.hotscripts.com/rate/49400.html  Thanks.&lt;/p&gt;</long-description>
      <tag line="3" name="link" description="Securimage PHP CAPTCHA" link="http://www.phpcaptcha.org"/>
      <tag line="3" name="link" description="Download Latest Version" link="http://www.phpcaptcha.org/latest.zip"/>
      <tag line="3" name="link" description="Online Documentation" link="http://www.phpcaptcha.org/Securimage_Docs/"/>
      <tag line="3" name="copyright" description="2012 Drew Phillips"/>
      <tag line="3" name="author" description="Drew Phillips &lt;drew@drew-phillips.com&gt;"/>
      <tag line="3" name="version" description="3.2RC2 (April 2012)"/>
      <tag line="3" name="package" description="Securimage"/>
    </docblock>
    <include line="50" type="Require Once" package="Default">
      <name/>
    </include>
  </file>
  <file path="assets\securimage\WavFile.php" hash="a7202d361e220cb22be04ca9744cac10" package="Default">
    <class final="false" abstract="false" namespace="global" line="66" package="PHPWavUtils">
      <extends/>
      <name>WavFile</name>
      <full_name>\WavFile</full_name>
      <docblock line="5">
        <description>Project: PHPWavUtils: Classes for creating, reading, and manipulating WAV files in PHP&lt;br /&gt;
File: WavFile.php&lt;br /&gt;</description>
        <long-description>&lt;p&gt;Copyright (c) 2012, Drew Phillips
All rights reserved.&lt;/p&gt;

&lt;p&gt;Redistribution and use in source and binary forms, with or without modification,
are permitted provided that the following conditions are met:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Redistributions of source code must retain the above copyright notice,
this list of conditions and the following disclaimer.&lt;/li&gt;
&lt;li&gt;Redistributions in binary form must reproduce the above copyright notice,
this list of conditions and the following disclaimer in the documentation
and/or other materials provided with the distribution.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
POSSIBILITY OF SUCH DAMAGE.&lt;/p&gt;

&lt;p&gt;Any modifications to the library should be indicated clearly in the source code
to inform users that the changes are not a part of the original software.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;</long-description>
        <tag line="5" name="copyright" description="2012 Drew Phillips"/>
        <tag line="5" name="author" description="Drew Phillips &lt;drew@drew-phillips.com&gt;"/>
        <tag line="5" name="author" description="Paul Voegler &lt;http://www.voegler.eu/&gt;"/>
        <tag line="5" name="version" description="1.0RC1 (April 2012)"/>
        <tag line="5" name="package" description="PHPWavUtils"/>
        <tag line="5" name="license" description="BSD License&#13;&#10;Changelog:&#13;&#10;  1.0 RC1 (4/20/2012)&#13;&#10;    - Initial release candidate&#13;&#10;    - Supports 8, 16, 24, 32 bit PCM, 32-bit IEEE FLOAT, Extensible Format&#13;&#10;    - Support for 18 channels of audio&#13;&#10;    - Ability to read an offset from a file to reduce memory footprint with large files&#13;&#10;    - Single-pass audio filter processing&#13;&#10;    - Highly accurate and efficient mix and normalization filters (http://www.voegler.eu/pub/audio/)&#13;&#10;    - Utility filters for degrading audio, and inserting silence&#13;&#10;  0.6 (4/12/2012)&#13;&#10;    - Support 8, 16, 24, 32 bit and PCM float (Paul Voegler)&#13;&#10;    - Add normalize filter, misc improvements and fixes (Paul Voegler)&#13;&#10;    - Normalize parameters to filter() to use filter constants as array indices&#13;&#10;    - Add option to mix filter to loop the target file if the source is longer&#13;&#10;  0.5 (4/3/2012)&#13;&#10;    - Fix binary pack routine (Paul Voegler)&#13;&#10;    - Add improved mixing function (Paul Voegler)"/>
      </docblock>
      <constant namespace="global" line="72" package="PHPWavUtils">
        <name>FILTER_MIX</name>
        <full_name>FILTER_MIX</full_name>
        <value>1</value>
        <docblock line="71">
          <description></description>
          <long-description></long-description>
          <tag line="71" name="var" description="Filter flag for mixing two files" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="75" package="PHPWavUtils">
        <name>FILTER_NORMALIZE</name>
        <full_name>FILTER_NORMALIZE</full_name>
        <value>2</value>
        <docblock line="74">
          <description></description>
          <long-description></long-description>
          <tag line="74" name="var" description="Filter flag for normalizing audio data" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="78" package="PHPWavUtils">
        <name>FILTER_DEGRADE</name>
        <full_name>FILTER_DEGRADE</full_name>
        <value>4</value>
        <docblock line="77">
          <description></description>
          <long-description></long-description>
          <tag line="77" name="var" description="Filter flag for degrading audio data" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="81" package="PHPWavUtils">
        <name>MAX_CHANNEL</name>
        <full_name>MAX_CHANNEL</full_name>
        <value>18</value>
        <docblock line="80">
          <description></description>
          <long-description></long-description>
          <tag line="80" name="var" description="Maximum number of channels" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="84" package="PHPWavUtils">
        <name>MAX_SAMPLERATE</name>
        <full_name>MAX_SAMPLERATE</full_name>
        <value>192000</value>
        <docblock line="83">
          <description></description>
          <long-description></long-description>
          <tag line="83" name="var" description="Maximum sample rate" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="87" package="PHPWavUtils">
        <name>SPEAKER_DEFAULT</name>
        <full_name>SPEAKER_DEFAULT</full_name>
        <value>0</value>
        <docblock line="86">
          <description>Channel Locations for ChannelMask</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="global" line="88" package="PHPWavUtils">
        <name>SPEAKER_FRONT_LEFT</name>
        <full_name>SPEAKER_FRONT_LEFT</full_name>
        <value>1</value>
      </constant>
      <constant namespace="global" line="89" package="PHPWavUtils">
        <name>SPEAKER_FRONT_RIGHT</name>
        <full_name>SPEAKER_FRONT_RIGHT</full_name>
        <value>2</value>
      </constant>
      <constant namespace="global" line="90" package="PHPWavUtils">
        <name>SPEAKER_FRONT_CENTER</name>
        <full_name>SPEAKER_FRONT_CENTER</full_name>
        <value>4</value>
      </constant>
      <constant namespace="global" line="91" package="PHPWavUtils">
        <name>SPEAKER_LOW_FREQUENCY</name>
        <full_name>SPEAKER_LOW_FREQUENCY</full_name>
        <value>8</value>
      </constant>
      <constant namespace="global" line="92" package="PHPWavUtils">
        <name>SPEAKER_BACK_LEFT</name>
        <full_name>SPEAKER_BACK_LEFT</full_name>
        <value>16</value>
      </constant>
      <constant namespace="global" line="93" package="PHPWavUtils">
        <name>SPEAKER_BACK_RIGHT</name>
        <full_name>SPEAKER_BACK_RIGHT</full_name>
        <value>32</value>
      </constant>
      <constant namespace="global" line="94" package="PHPWavUtils">
        <name>SPEAKER_FRONT_LEFT_OF_CENTER</name>
        <full_name>SPEAKER_FRONT_LEFT_OF_CENTER</full_name>
        <value>64</value>
      </constant>
      <constant namespace="global" line="95" package="PHPWavUtils">
        <name>SPEAKER_FRONT_RIGHT_OF_CENTER</name>
        <full_name>SPEAKER_FRONT_RIGHT_OF_CENTER</full_name>
        <value>128</value>
      </constant>
      <constant namespace="global" line="96" package="PHPWavUtils">
        <name>SPEAKER_BACK_CENTER</name>
        <full_name>SPEAKER_BACK_CENTER</full_name>
        <value>256</value>
      </constant>
      <constant namespace="global" line="97" package="PHPWavUtils">
        <name>SPEAKER_SIDE_LEFT</name>
        <full_name>SPEAKER_SIDE_LEFT</full_name>
        <value>512</value>
      </constant>
      <constant namespace="global" line="98" package="PHPWavUtils">
        <name>SPEAKER_SIDE_RIGHT</name>
        <full_name>SPEAKER_SIDE_RIGHT</full_name>
        <value>1024</value>
      </constant>
      <constant namespace="global" line="99" package="PHPWavUtils">
        <name>SPEAKER_TOP_CENTER</name>
        <full_name>SPEAKER_TOP_CENTER</full_name>
        <value>2048</value>
      </constant>
      <constant namespace="global" line="100" package="PHPWavUtils">
        <name>SPEAKER_TOP_FRONT_LEFT</name>
        <full_name>SPEAKER_TOP_FRONT_LEFT</full_name>
        <value>4096</value>
      </constant>
      <constant namespace="global" line="101" package="PHPWavUtils">
        <name>SPEAKER_TOP_FRONT_CENTER</name>
        <full_name>SPEAKER_TOP_FRONT_CENTER</full_name>
        <value>8192</value>
      </constant>
      <constant namespace="global" line="102" package="PHPWavUtils">
        <name>SPEAKER_TOP_FRONT_RIGHT</name>
        <full_name>SPEAKER_TOP_FRONT_RIGHT</full_name>
        <value>16384</value>
      </constant>
      <constant namespace="global" line="103" package="PHPWavUtils">
        <name>SPEAKER_TOP_BACK_LEFT</name>
        <full_name>SPEAKER_TOP_BACK_LEFT</full_name>
        <value>32768</value>
      </constant>
      <constant namespace="global" line="104" package="PHPWavUtils">
        <name>SPEAKER_TOP_BACK_CENTER</name>
        <full_name>SPEAKER_TOP_BACK_CENTER</full_name>
        <value>65536</value>
      </constant>
      <constant namespace="global" line="105" package="PHPWavUtils">
        <name>SPEAKER_TOP_BACK_RIGHT</name>
        <full_name>SPEAKER_TOP_BACK_RIGHT</full_name>
        <value>131072</value>
      </constant>
      <constant namespace="global" line="106" package="PHPWavUtils">
        <name>SPEAKER_ALL</name>
        <full_name>SPEAKER_ALL</full_name>
        <value>262143</value>
      </constant>
      <constant namespace="global" line="109" package="PHPWavUtils">
        <name>WAVE_FORMAT_PCM</name>
        <full_name>WAVE_FORMAT_PCM</full_name>
        <value>1</value>
        <docblock line="108">
          <description></description>
          <long-description></long-description>
          <tag line="108" name="var" description="PCM Audio Format" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="112" package="PHPWavUtils">
        <name>WAVE_FORMAT_IEEE_FLOAT</name>
        <full_name>WAVE_FORMAT_IEEE_FLOAT</full_name>
        <value>3</value>
        <docblock line="111">
          <description></description>
          <long-description></long-description>
          <tag line="111" name="var" description="IEEE FLOAT Audio Format" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="115" package="PHPWavUtils">
        <name>WAVE_FORMAT_EXTENSIBLE</name>
        <full_name>WAVE_FORMAT_EXTENSIBLE</full_name>
        <value>65534</value>
        <docblock line="114">
          <description></description>
          <long-description></long-description>
          <tag line="114" name="var" description="EXTENSIBLE Audio Format - actual audio format defined by SubFormat" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="118" package="PHPWavUtils">
        <name>WAVE_SUBFORMAT_PCM</name>
        <full_name>WAVE_SUBFORMAT_PCM</full_name>
        <value>"0100000000001000800000aa00389b71"</value>
        <docblock line="117">
          <description></description>
          <long-description></long-description>
          <tag line="117" name="var" description="PCM Audio Format SubType - LE hex representation of GUID {00000001-0000-0010-8000-00AA00389B71}" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="121" package="PHPWavUtils">
        <name>WAVE_SUBFORMAT_IEEE_FLOAT</name>
        <full_name>WAVE_SUBFORMAT_IEEE_FLOAT</full_name>
        <value>"0300000000001000800000aa00389b71"</value>
        <docblock line="120">
          <description></description>
          <long-description></long-description>
          <tag line="120" name="var" description="IEEE FLOAT Audio Format SubType - LE hex representation of GUID {00000003-0000-0010-8000-00AA00389B71}" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </constant>
      <property final="false" static="true" visibility="protected" line="130" namespace="global" package="Default">
        <name>$LOOKUP_LOGBASE</name>
        <default>array(2.513, 2.667, 2.841, 3.038, 3.262, 3.52, 3.819, 4.171, 4.589, 5.093, 5.711, 6.487, 7.483, 8.806, 10.634, 13.302, 17.51, 24.97, 41.155, 96.088)</default>
        <docblock line="127">
          <description></description>
          <long-description></long-description>
          <tag line="127" name="var" description="Log base modifier lookup table for a given threshold (in 0.05 steps) used by normalizeSample. Adjusts the slope (1st derivative) of the log function at the threshold to 1 for a smooth transition from linear to logarithmic amplitude output." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="138" namespace="global" package="Default">
        <name>$_actualSize</name>
        <default></default>
        <docblock line="137">
          <description></description>
          <long-description></long-description>
          <tag line="137" name="var" description="The actual physical file size" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="141" namespace="global" package="Default">
        <name>$_chunkSize</name>
        <default></default>
        <docblock line="140">
          <description></description>
          <long-description></long-description>
          <tag line="140" name="var" description="The size of the file in RIFF header" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="144" namespace="global" package="Default">
        <name>$_fmtChunkSize</name>
        <default></default>
        <docblock line="143">
          <description></description>
          <long-description></long-description>
          <tag line="143" name="var" description="The size of the &quot;fmt &quot; chunk" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="147" namespace="global" package="Default">
        <name>$_fmtExtendedSize</name>
        <default></default>
        <docblock line="146">
          <description></description>
          <long-description></long-description>
          <tag line="146" name="var" description="The size of the extended &quot;fmt &quot; data" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="150" namespace="global" package="Default">
        <name>$_factChunkSize</name>
        <default></default>
        <docblock line="149">
          <description></description>
          <long-description></long-description>
          <tag line="149" name="var" description="The size of the &quot;fact&quot; chunk" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="153" namespace="global" package="Default">
        <name>$_dataSize</name>
        <default></default>
        <docblock line="152">
          <description></description>
          <long-description></long-description>
          <tag line="152" name="var" description="Size of the data chunk" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="156" namespace="global" package="Default">
        <name>$_dataSize_fp</name>
        <default></default>
        <docblock line="155">
          <description></description>
          <long-description></long-description>
          <tag line="155" name="var" description="Size of the data chunk in the opened wav file" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="159" namespace="global" package="Default">
        <name>$_dataSize_valid</name>
        <default></default>
        <docblock line="158">
          <description></description>
          <long-description></long-description>
          <tag line="158" name="var" description="Does _dataSize really reflect strlen($_samples)? Case when a wav file is read with readData = false" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="162" namespace="global" package="Default">
        <name>$_dataOffset</name>
        <default></default>
        <docblock line="161">
          <description></description>
          <long-description></long-description>
          <tag line="161" name="var" description="Starting offset of data chunk" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="165" namespace="global" package="Default">
        <name>$_audioFormat</name>
        <default></default>
        <docblock line="164">
          <description></description>
          <long-description></long-description>
          <tag line="164" name="var" description="The audio format - WavFile::WAVE_FORMAT_*" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="168" namespace="global" package="Default">
        <name>$_audioSubFormat</name>
        <default></default>
        <docblock line="167">
          <description></description>
          <long-description></long-description>
          <tag line="167" name="var" description="The audio subformat - WavFile::WAVE_SUBFORMAT_*" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="171" namespace="global" package="Default">
        <name>$_numChannels</name>
        <default></default>
        <docblock line="170">
          <description></description>
          <long-description></long-description>
          <tag line="170" name="var" description="Number of channels in the audio file" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="174" namespace="global" package="Default">
        <name>$_channelMask</name>
        <default></default>
        <docblock line="173">
          <description></description>
          <long-description></long-description>
          <tag line="173" name="var" description="The channel mask" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="177" namespace="global" package="Default">
        <name>$_sampleRate</name>
        <default></default>
        <docblock line="176">
          <description></description>
          <long-description></long-description>
          <tag line="176" name="var" description="Samples per second" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="180" namespace="global" package="Default">
        <name>$_bitsPerSample</name>
        <default></default>
        <docblock line="179">
          <description></description>
          <long-description></long-description>
          <tag line="179" name="var" description="Number of bits per sample" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="183" namespace="global" package="Default">
        <name>$_validBitsPerSample</name>
        <default></default>
        <docblock line="182">
          <description></description>
          <long-description></long-description>
          <tag line="182" name="var" description="Number of valid bits per sample" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="186" namespace="global" package="Default">
        <name>$_blockAlign</name>
        <default></default>
        <docblock line="185">
          <description></description>
          <long-description></long-description>
          <tag line="185" name="var" description="NumChannels * BitsPerSample/8" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="189" namespace="global" package="Default">
        <name>$_numBlocks</name>
        <default></default>
        <docblock line="188">
          <description></description>
          <long-description></long-description>
          <tag line="188" name="var" description="Number of sample blocks" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="192" namespace="global" package="Default">
        <name>$_byteRate</name>
        <default></default>
        <docblock line="191">
          <description></description>
          <long-description></long-description>
          <tag line="191" name="var" description="Bytes per second" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="195" namespace="global" package="Default">
        <name>$_samples</name>
        <default></default>
        <docblock line="194">
          <description></description>
          <long-description></long-description>
          <tag line="194" name="var" description="Binary string of samples" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="198" namespace="global" package="Default">
        <name>$_fp</name>
        <default></default>
        <docblock line="197">
          <description></description>
          <long-description></long-description>
          <tag line="197" name="var" description="The file pointer used for reading wavs from file or memory" type="resource">
            <type by_reference="false">resource</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="218" package="PHPWavUtils">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="204">
          <description>WavFile Constructor.</description>
          <long-description>&lt;pre&gt;&lt;code&gt;$wav1 = new WavFile(2, 44100, 16);         // new wav with 2 channels, at 44100 samples/sec and 16 bits per sample
$wav2 = new WavFile('./audio/sound.wav');  // open and read wav file
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="204" name="param" description="(Optional) If string, the filename of the wav file to open. The number of channels otherwise. Defaults to 1." type="string|int" variable="$numChannelsOrFileName">
            <type by_reference="false">string</type>
            <type by_reference="false">int</type>
          </tag>
          <tag line="204" name="param" description="(Optional) If opening a file and boolean, decides whether to read the data chunk or not. Defaults to true. The sample rate in samples per second otherwise. 8000 = standard telephone, 16000 = wideband telephone, 32000 = FM radio and 44100 = CD quality. Defaults to 8000." type="int|bool" variable="$sampleRateOrReadData">
            <type by_reference="false">int</type>
            <type by_reference="false">bool</type>
          </tag>
          <tag line="204" name="param" description="(Optional) The number of bits per sample. Has to be 8, 16 or 24 for PCM audio or 32 for IEEE FLOAT audio. 8 = telephone, 16 = CD and 24 or 32 = studio quality. Defaults to 8." type="int" variable="$bitsPerSample">
            <type by_reference="false">int</type>
          </tag>
          <tag line="204" name="throws" description="" type="\WavFormatException">
            <type by_reference="false">\WavFormatException</type>
          </tag>
          <tag line="204" name="throws" description="" type="\WavFileException">
            <type by_reference="false">\WavFileException</type>
          </tag>
        </docblock>
        <argument line="218">
          <name>$numChannelsOrFileName</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="218">
          <name>$sampleRateOrReadData</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="218">
          <name>$bitsPerSample</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="253" package="PHPWavUtils">
        <name>__destruct</name>
        <full_name>__destruct</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="257" package="PHPWavUtils">
        <name>__clone</name>
        <full_name>__clone</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="266" package="PHPWavUtils">
        <name>__toString</name>
        <full_name>__toString</full_name>
        <docblock line="261">
          <description>Output the wav file headers and data.</description>
          <long-description></long-description>
          <tag line="261" name="return" description="The encoded file." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="283" package="PHPWavUtils">
        <name>unpackSample</name>
        <full_name>unpackSample</full_name>
        <docblock line="276">
          <description>Unpacks a single binary sample to numeric value.</description>
          <long-description></long-description>
          <tag line="276" name="param" description="(Required) The sample to decode." type="string" variable="$sampleBinary">
            <type by_reference="false">string</type>
          </tag>
          <tag line="276" name="param" description="(Optional) The bits per sample to decode. If omitted, derives it from the length of $sampleBinary." type="int" variable="$bitDepth">
            <type by_reference="false">int</type>
          </tag>
          <tag line="276" name="return" description="The numeric sample value. Float for 32-bit samples. Returns null for unsupported bit depths." type="int|float">
            <type by_reference="false">int</type>
            <type by_reference="false">float</type>
          </tag>
        </docblock>
        <argument line="283">
          <name>$sampleBinary</name>
          <default></default>
          <type/>
        </argument>
        <argument line="283">
          <name>$bitDepth</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="329" package="PHPWavUtils">
        <name>packSample</name>
        <full_name>packSample</full_name>
        <docblock line="322">
          <description>Packs a single numeric sample to binary.</description>
          <long-description></long-description>
          <tag line="322" name="param" description="(Required) The sample to encode. Has to be within valid range for $bitDepth. Float values only for 32 bits." type="int|float" variable="$sample">
            <type by_reference="false">int</type>
            <type by_reference="false">float</type>
          </tag>
          <tag line="322" name="param" description="(Required) The bits per sample to encode with." type="int" variable="$bitDepth">
            <type by_reference="false">int</type>
          </tag>
          <tag line="322" name="return" description="The encoded binary sample. Returns null for unsupported bit depths." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="329">
          <name>$sample</name>
          <default></default>
          <type/>
        </argument>
        <argument line="329">
          <name>$bitDepth</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="367" package="PHPWavUtils">
        <name>unpackSampleBlock</name>
        <full_name>unpackSampleBlock</full_name>
        <docblock line="359">
          <description>Unpacks a binary sample block to numeric values.</description>
          <long-description></long-description>
          <tag line="359" name="param" description="(Required) The binary sample block (all channels)." type="string" variable="$sampleBlock">
            <type by_reference="false">string</type>
          </tag>
          <tag line="359" name="param" description="(Required) The bits per sample to decode." type="int" variable="$bitDepth">
            <type by_reference="false">int</type>
          </tag>
          <tag line="359" name="param" description="(Optional) The number of channels to decode. If omitted, derives it from the length of $sampleBlock and $bitDepth." type="int" variable="$numChannels">
            <type by_reference="false">int</type>
          </tag>
          <tag line="359" name="return" description="The sample values as an array of integers of floats for 32 bits. First channel is array index 1." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="367">
          <name>$sampleBlock</name>
          <default></default>
          <type/>
        </argument>
        <argument line="367">
          <name>$bitDepth</name>
          <default></default>
          <type/>
        </argument>
        <argument line="367">
          <name>$numChannels</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="389" package="PHPWavUtils">
        <name>packSampleBlock</name>
        <full_name>packSampleBlock</full_name>
        <docblock line="382">
          <description>Packs an array of numeric channel samples to a binary sample block.</description>
          <long-description></long-description>
          <tag line="382" name="param" description="(Required) The array of channel sample values. Expects float values for 32 bits and integer otherwise." type="array" variable="$samples">
            <type by_reference="false">array</type>
          </tag>
          <tag line="382" name="param" description="(Required) The bits per sample to encode with." type="int" variable="$bitDepth">
            <type by_reference="false">int</type>
          </tag>
          <tag line="382" name="return" description="The encoded binary sample block." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="389">
          <name>$samples</name>
          <default></default>
          <type/>
        </argument>
        <argument line="389">
          <name>$bitDepth</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="416" package="PHPWavUtils">
        <name>normalizeSample</name>
        <full_name>normalizeSample</full_name>
        <docblock line="398">
          <description>Normalizes a float audio sample.</description>
          <long-description>&lt;p&gt;Maximum input range assumed for compression is [-2, 2].
See http://www.voegler.eu/pub/audio/ for more information.&lt;/p&gt;</long-description>
          <tag line="398" name="param" description="(Required) The float sample to normalize." type="float" variable="$sampleFloat">
            <type by_reference="false">float</type>
          </tag>
          <tag line="398" name="param" description="(Required) The threshold or gain factor for normalizing the amplitude. &lt;ul&gt;&#13;&#10;    &lt;li&gt; &gt;= 1 - Normalize by multiplying by the threshold (boost - positive gain). &lt;br /&gt;&#13;&#10;           A value of 1 in effect means no normalization (and results in clipping). &lt;/li&gt;&#13;&#10;    &lt;li&gt; &lt;= -1 - Normalize by dividing by the the absolute value of threshold (attenuate - negative gain). &lt;br /&gt;&#13;&#10;           A factor of 2 (-2) is about 6dB reduction in volume.&lt;/li&gt;&#13;&#10;    &lt;li&gt; [0, 1) - (open inverval - not including 1) - The threshold&#13;&#10;           above which amplitudes are comressed logarithmically. &lt;br /&gt;&#13;&#10;           e.g. 0.6 to leave amplitudes up to 60% &quot;as is&quot; and compress above. &lt;/li&gt;&#13;&#10;    &lt;li&gt; (-1, 0) - (open inverval - not including -1 and 0) - The threshold&#13;&#10;           above which amplitudes are comressed linearly. &lt;br /&gt;&#13;&#10;           e.g. -0.6 to leave amplitudes up to 60% &quot;as is&quot; and compress above. &lt;/li&gt;&lt;/ul&gt;" type="float" variable="$threshold">
            <type by_reference="false">float</type>
          </tag>
          <tag line="398" name="return" description="The normalized sample." type="float">
            <type by_reference="false">float</type>
          </tag>
        </docblock>
        <argument line="416">
          <name>$sampleFloat</name>
          <default></default>
          <type/>
        </argument>
        <argument line="416">
          <name>$threshold</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="450" package="PHPWavUtils">
        <name>getActualSize</name>
        <full_name>getActualSize</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="454" package="PHPWavUtils">
        <name>setActualSize</name>
        <full_name>setActualSize</full_name>
        <argument line="454">
          <name>$actualSize</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="464" package="PHPWavUtils">
        <name>getChunkSize</name>
        <full_name>getChunkSize</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="468" package="PHPWavUtils">
        <name>setChunkSize</name>
        <full_name>setChunkSize</full_name>
        <argument line="468">
          <name>$chunkSize</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="484" package="PHPWavUtils">
        <name>getFmtChunkSize</name>
        <full_name>getFmtChunkSize</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="488" package="PHPWavUtils">
        <name>setFmtChunkSize</name>
        <full_name>setFmtChunkSize</full_name>
        <argument line="488">
          <name>$fmtChunkSize</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="501" package="PHPWavUtils">
        <name>getFmtExtendedSize</name>
        <full_name>getFmtExtendedSize</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="505" package="PHPWavUtils">
        <name>setFmtExtendedSize</name>
        <full_name>setFmtExtendedSize</full_name>
        <argument line="505">
          <name>$fmtExtendedSize</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="523" package="PHPWavUtils">
        <name>getFactChunkSize</name>
        <full_name>getFactChunkSize</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="527" package="PHPWavUtils">
        <name>setFactChunkSize</name>
        <full_name>setFactChunkSize</full_name>
        <argument line="527">
          <name>$factChunkSize</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="544" package="PHPWavUtils">
        <name>getDataSize</name>
        <full_name>getDataSize</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="548" package="PHPWavUtils">
        <name>setDataSize</name>
        <full_name>setDataSize</full_name>
        <argument line="548">
          <name>$dataSize</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="562" package="PHPWavUtils">
        <name>getDataOffset</name>
        <full_name>getDataOffset</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="566" package="PHPWavUtils">
        <name>setDataOffset</name>
        <full_name>setDataOffset</full_name>
        <argument line="566">
          <name>$dataOffset</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="580" package="PHPWavUtils">
        <name>getAudioFormat</name>
        <full_name>getAudioFormat</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="584" package="PHPWavUtils">
        <name>setAudioFormat</name>
        <full_name>setAudioFormat</full_name>
        <argument line="584">
          <name>$audioFormat</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="609" package="PHPWavUtils">
        <name>getAudioSubFormat</name>
        <full_name>getAudioSubFormat</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="613" package="PHPWavUtils">
        <name>setAudioSubFormat</name>
        <full_name>setAudioSubFormat</full_name>
        <argument line="613">
          <name>$audioSubFormat</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="627" package="PHPWavUtils">
        <name>getNumChannels</name>
        <full_name>getNumChannels</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="631" package="PHPWavUtils">
        <name>setNumChannels</name>
        <full_name>setNumChannels</full_name>
        <argument line="631">
          <name>$numChannels</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="647" package="PHPWavUtils">
        <name>getChannelMask</name>
        <full_name>getChannelMask</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="651" package="PHPWavUtils">
        <name>setChannelMask</name>
        <full_name>setChannelMask</full_name>
        <argument line="651">
          <name>$channelMask</name>
          <default>self::SPEAKER_DEFAULT</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="672" package="PHPWavUtils">
        <name>getSampleRate</name>
        <full_name>getSampleRate</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="676" package="PHPWavUtils">
        <name>setSampleRate</name>
        <full_name>setSampleRate</full_name>
        <argument line="676">
          <name>$sampleRate</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="690" package="PHPWavUtils">
        <name>getBitsPerSample</name>
        <full_name>getBitsPerSample</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="694" package="PHPWavUtils">
        <name>setBitsPerSample</name>
        <full_name>setBitsPerSample</full_name>
        <argument line="694">
          <name>$bitsPerSample</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="710" package="PHPWavUtils">
        <name>getValidBitsPerSample</name>
        <full_name>getValidBitsPerSample</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="714" package="PHPWavUtils">
        <name>setValidBitsPerSample</name>
        <full_name>setValidBitsPerSample</full_name>
        <argument line="714">
          <name>$validBitsPerSample</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="729" package="PHPWavUtils">
        <name>getBlockAlign</name>
        <full_name>getBlockAlign</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="733" package="PHPWavUtils">
        <name>setBlockAlign</name>
        <full_name>setBlockAlign</full_name>
        <argument line="733">
          <name>$blockAlign</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="745" package="PHPWavUtils">
        <name>getNumBlocks</name>
        <full_name>getNumBlocks</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="750" package="PHPWavUtils">
        <name>setNumBlocks</name>
        <full_name>setNumBlocks</full_name>
        <argument line="750">
          <name>$numBlocks</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="760" package="PHPWavUtils">
        <name>getByteRate</name>
        <full_name>getByteRate</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="764" package="PHPWavUtils">
        <name>setByteRate</name>
        <full_name>setByteRate</full_name>
        <argument line="764">
          <name>$byteRate</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="774" package="PHPWavUtils">
        <name>getSamples</name>
        <full_name>getSamples</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="778" package="PHPWavUtils">
        <name>setSamples</name>
        <full_name>setSamples</full_name>
        <argument line="778">
          <name>$samples</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="794" package="PHPWavUtils">
        <name>getMinAmplitude</name>
        <full_name>getMinAmplitude</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="805" package="PHPWavUtils">
        <name>getZeroAmplitude</name>
        <full_name>getZeroAmplitude</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="816" package="PHPWavUtils">
        <name>getMaxAmplitude</name>
        <full_name>getMaxAmplitude</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="837" package="PHPWavUtils">
        <name>makeHeader</name>
        <full_name>makeHeader</full_name>
        <docblock line="831">
          <description>Construct a wav header from this object.</description>
          <long-description>&lt;p&gt;Includes "fact" chunk in necessary.
http://www-mmsp.ece.mcgill.ca/documents/audioformats/wave/wave.html&lt;/p&gt;</long-description>
          <tag line="831" name="return" description="The RIFF header data." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="881" package="PHPWavUtils">
        <name>getDataSubchunk</name>
        <full_name>getDataSubchunk</full_name>
        <docblock line="876">
          <description>Construct wav DATA chunk.</description>
          <long-description></long-description>
          <tag line="876" name="return" description="The DATA header and chunk." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="902" package="PHPWavUtils">
        <name>save</name>
        <full_name>save</full_name>
        <docblock line="896">
          <description>Save the wav data to a file.</description>
          <long-description></long-description>
          <tag line="896" name="param" description="(Required) The file path to save the wav to." type="string" variable="$filename">
            <type by_reference="false">string</type>
          </tag>
          <tag line="896" name="throws" description="" type="\WavFileException">
            <type by_reference="false">\WavFileException</type>
          </tag>
        </docblock>
        <argument line="902">
          <name>$filename</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="924" package="PHPWavUtils">
        <name>openWav</name>
        <full_name>openWav</full_name>
        <docblock line="916">
          <description>Reads a wav header and data from a file.</description>
          <long-description></long-description>
          <tag line="916" name="param" description="(Required) The path to the wav file to read." type="string" variable="$filename">
            <type by_reference="false">string</type>
          </tag>
          <tag line="916" name="param" description="(Optional) If true, also read the data chunk." type="bool" variable="$readData">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="916" name="throws" description="" type="\WavFormatException">
            <type by_reference="false">\WavFormatException</type>
          </tag>
          <tag line="916" name="throws" description="" type="\WavFileException">
            <type by_reference="false">\WavFileException</type>
          </tag>
        </docblock>
        <argument line="924">
          <name>$filename</name>
          <default></default>
          <type/>
        </argument>
        <argument line="924">
          <name>$readData</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="950" package="PHPWavUtils">
        <name>closeWav</name>
        <full_name>closeWav</full_name>
        <docblock line="946">
          <description>Close a with openWav() previously opened wav file or free the buffer of setWavData().</description>
          <long-description>&lt;p&gt;Not necessary if the data has been read (readData = true) already.&lt;/p&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="964" package="PHPWavUtils">
        <name>setWavData</name>
        <full_name>setWavData</full_name>
        <docblock line="956">
          <description>Set the wav file data and properties from a wav file in a string.</description>
          <long-description></long-description>
          <tag line="956" name="param" description="(Required) The wav file data. Passed by reference." type="string" variable="$data">
            <type by_reference="false">string</type>
          </tag>
          <tag line="956" name="param" description="(Optional) True to free the passed $data after copying." type="bool" variable="$free">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="956" name="throws" description="" type="\WavFormatException">
            <type by_reference="false">\WavFormatException</type>
          </tag>
          <tag line="956" name="throws" description="" type="\WavFileException">
            <type by_reference="false">\WavFileException</type>
          </tag>
        </docblock>
        <argument line="964">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
        <argument line="964">
          <name>$free</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="994" package="PHPWavUtils">
        <name>readWav</name>
        <full_name>readWav</full_name>
        <docblock line="987">
          <description>Read wav file from a stream.</description>
          <long-description></long-description>
          <tag line="987" name="param" description="(Optional) If true, also read the data chunk." type="\" variable="$readData"/>
          <tag line="987" name="throws" description="" type="\WavFormatException">
            <type by_reference="false">\WavFormatException</type>
          </tag>
          <tag line="987" name="throws" description="" type="\WavFileException">
            <type by_reference="false">\WavFileException</type>
          </tag>
        </docblock>
        <argument line="994">
          <name>$readData</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1019" package="PHPWavUtils">
        <name>readWavHeader</name>
        <full_name>readWavHeader</full_name>
        <docblock line="1012">
          <description>Parse a wav header.</description>
          <long-description>&lt;p&gt;http://www-mmsp.ece.mcgill.ca/documents/audioformats/wave/wave.html&lt;/p&gt;</long-description>
          <tag line="1012" name="throws" description="" type="\WavFormatException">
            <type by_reference="false">\WavFormatException</type>
          </tag>
          <tag line="1012" name="throws" description="" type="\WavFileException">
            <type by_reference="false">\WavFileException</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1275" package="PHPWavUtils">
        <name>readWavData</name>
        <full_name>readWavData</full_name>
        <docblock line="1268">
          <description>Read the wav data from the file into the buffer.</description>
          <long-description></long-description>
          <tag line="1268" name="param" description="(Optional) The byte offset to skip before starting to read. Must be a multiple of BlockAlign." type="\" variable="$dataOffset"/>
          <tag line="1268" name="param" description="(Optional) The size of the data to read in bytes. Must be a multiple of BlockAlign. Defaults to all data." type="\" variable="$dataSize"/>
          <tag line="1268" name="throws" description="" type="\WavFileException">
            <type by_reference="false">\WavFileException</type>
          </tag>
        </docblock>
        <argument line="1275">
          <name>$dataOffset</name>
          <default>0</default>
          <type/>
        </argument>
        <argument line="1275">
          <name>$dataSize</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1316" package="PHPWavUtils">
        <name>getSampleBlock</name>
        <full_name>getSampleBlock</full_name>
        <docblock line="1310">
          <description>Return a single sample block from the file.</description>
          <long-description></long-description>
          <tag line="1310" name="param" description="(Required) The sample block number. Zero based." type="int" variable="$blockNum">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1310" name="return" description="The binary sample block (all channels). Returns null if the sample block number was out of range." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1316">
          <name>$blockNum</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1341" package="PHPWavUtils">
        <name>setSampleBlock</name>
        <full_name>setSampleBlock</full_name>
        <docblock line="1333">
          <description>Set a single sample block.</description>
          <long-description>&lt;p&gt;&lt;br /&gt;
Allows to append a sample block.&lt;/p&gt;</long-description>
          <tag line="1333" name="param" description="(Required) The binary sample block (all channels)." type="string" variable="$sampleBlock">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1333" name="param" description="(Required) The sample block number. Zero based." type="int" variable="$blockNum">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1333" name="throws" description="" type="\WavFileException">
            <type by_reference="false">\WavFileException</type>
          </tag>
        </docblock>
        <argument line="1341">
          <name>$sampleBlock</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1341">
          <name>$blockNum</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1386" package="PHPWavUtils">
        <name>getSampleValue</name>
        <full_name>getSampleValue</full_name>
        <docblock line="1378">
          <description>Get a float sample value for a specific sample block and channel number.</description>
          <long-description></long-description>
          <tag line="1378" name="param" description="(Required) The sample block number to fetch. Zero based." type="int" variable="$blockNum">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1378" name="param" description="(Required) The channel number within the sample block to fetch. First channel is 1." type="int" variable="$channelNum">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1378" name="return" description="The float sample value. Returns null if the sample block number was out of range." type="float">
            <type by_reference="false">float</type>
          </tag>
          <tag line="1378" name="throws" description="" type="\WavFileException">
            <type by_reference="false">\WavFileException</type>
          </tag>
        </docblock>
        <argument line="1386">
          <name>$blockNum</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1386">
          <name>$channelNum</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1450" package="PHPWavUtils">
        <name>setSampleValue</name>
        <full_name>setSampleValue</full_name>
        <docblock line="1440">
          <description>Sets a float sample value for a specific sample block number and channel.</description>
          <long-description>&lt;p&gt;&lt;br /&gt;
Converts float values to appropriate integer values and clips properly. &lt;br /&gt;
Allows to append samples (in order).&lt;/p&gt;</long-description>
          <tag line="1440" name="param" description="(Required) The float sample value to set. Converts float values and clips if necessary." type="float" variable="$sampleFloat">
            <type by_reference="false">float</type>
          </tag>
          <tag line="1440" name="param" description="(Required) The sample block number to set or append. Zero based." type="int" variable="$blockNum">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1440" name="param" description="(Required) The channel number within the sample block to set or append. First channel is 1." type="int" variable="$channelNum">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1440" name="throws" description="" type="\WavFileException">
            <type by_reference="false">\WavFileException</type>
          </tag>
        </docblock>
        <argument line="1450">
          <name>$sampleFloat</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1450">
          <name>$blockNum</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1450">
          <name>$channelNum</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1568" package="PHPWavUtils">
        <name>filter</name>
        <full_name>filter</full_name>
        <docblock line="1543">
          <description>Run samples through audio processing filters.</description>
          <long-description>&lt;pre&gt;&lt;code&gt;$wav-&gt;filter(
     array(
         WavFile::FILTER_MIX =&gt; array(          // Filter for mixing 2 WavFile instances.
             'wav' =&gt; $wav2,                    // (Required) The WavFile to mix into this WhavFile. If no optional arguments are given, can be passed without the array.
             'loop' =&gt; true,                    // (Optional) Loop the selected portion (with warping to the beginning at the end).
             'blockOffset' =&gt; 0,                // (Optional) Block number to start mixing from.
             'numBlocks' =&gt; null                // (Optional) Number of blocks to mix in or to select for looping. Defaults to the end or all data for looping.
         ),
         WavFile::FILTER_NORMALIZE =&gt; 0.6,      // (Required) Normalization of (mixed) audio samples - see threshold parameter for normalizeSample().
         WavFile::FILTER_DEGRADE =&gt; 0.9         // (Required) Introduce random noise. The quality relative to the amplitude. 1 = no noise, 0 = max. noise.
     ),
     0,                                         // (Optional) The block number of this WavFile to start with.
     null                                       // (Optional) The number of blocks to process.
 );
 &lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="1543" name="param" description="(Required) An array of 1 or more audio processing filters." type="array" variable="$filters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1543" name="param" description="(Optional) The block number to start precessing from." type="int" variable="$blockOffset">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1543" name="param" description="(Optional) The maximum  number of blocks to process." type="int" variable="$numBlocks">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1543" name="throws" description="" type="\WavFileException">
            <type by_reference="false">\WavFileException</type>
          </tag>
        </docblock>
        <argument line="1568">
          <name>$filters</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1568">
          <name>$blockOffset</name>
          <default>0</default>
          <type/>
        </argument>
        <argument line="1568">
          <name>$numBlocks</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1675" package="PHPWavUtils">
        <name>appendWav</name>
        <full_name>appendWav</full_name>
        <docblock line="1668">
          <description>Append a wav file to the current wav.</description>
          <long-description>&lt;p&gt;&lt;br /&gt;
The wav files must have the same sample rate, number of bits per sample, and number of channels.&lt;/p&gt;</long-description>
          <tag line="1668" name="param" description="(Required) The wav file to append." type="\WavFile" variable="$wav">
            <type by_reference="false">\WavFile</type>
          </tag>
          <tag line="1668" name="throws" description="" type="\WavFileException">
            <type by_reference="false">\WavFileException</type>
          </tag>
        </docblock>
        <argument line="1675">
          <name>$wav</name>
          <default></default>
          <type>\WavFile</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1699" package="PHPWavUtils">
        <name>mergeWav</name>
        <full_name>mergeWav</full_name>
        <docblock line="1691">
          <description>Mix 2 wav files together.</description>
          <long-description>&lt;p&gt;&lt;br /&gt;
Both wavs must have the same sample rate and same number of channels.&lt;/p&gt;</long-description>
          <tag line="1691" name="param" description="(Required) The WavFile to mix." type="\WavFile" variable="$wav">
            <type by_reference="false">\WavFile</type>
          </tag>
          <tag line="1691" name="param" description="(Optional) See normalizeSample for an explanation." type="float" variable="$normalizeThreshold">
            <type by_reference="false">float</type>
          </tag>
          <tag line="1691" name="throws" description="" type="\WavFileException">
            <type by_reference="false">\WavFileException</type>
          </tag>
        </docblock>
        <argument line="1699">
          <name>$wav</name>
          <default></default>
          <type>\WavFile</type>
        </argument>
        <argument line="1699">
          <name>$normalizeThreshold</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1711" package="PHPWavUtils">
        <name>insertSilence</name>
        <full_name>insertSilence</full_name>
        <docblock line="1706">
          <description>Add silence to the wav file.</description>
          <long-description></long-description>
          <tag line="1706" name="param" description="(Optional) How many seconds of silence. If negative, add to the beginning of the file. Defaults to 1s." type="float" variable="$duration">
            <type by_reference="false">float</type>
          </tag>
        </docblock>
        <argument line="1711">
          <name>$duration</name>
          <default>1.0</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1733" package="PHPWavUtils">
        <name>degrade</name>
        <full_name>degrade</full_name>
        <docblock line="1728">
          <description>Degrade the quality of the wav file by introducing random noise.</description>
          <long-description></long-description>
          <tag line="1728" name="param" description="quality  (Optional) The quality relative to the amplitude. 1 = no noise, 0 = max. noise." type="float" variable="$quality">
            <type by_reference="false">float</type>
          </tag>
        </docblock>
        <argument line="1733">
          <name>$quality</name>
          <default>1.0</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1746" package="PHPWavUtils">
        <name>generateNoise</name>
        <full_name>generateNoise</full_name>
        <docblock line="1740">
          <description>Generate noise at the end of the wav for the specified duration and volume.</description>
          <long-description></long-description>
          <tag line="1740" name="param" description="(Optional) Number of seconds of noise to generate." type="float" variable="$duration">
            <type by_reference="false">float</type>
          </tag>
          <tag line="1740" name="param" description="(Optional) The percentage of the maximum amplitude to use. 100 = full amplitude." type="float" variable="$percent">
            <type by_reference="false">float</type>
          </tag>
        </docblock>
        <argument line="1746">
          <name>$duration</name>
          <default>1.0</default>
          <type/>
        </argument>
        <argument line="1746">
          <name>$percent</name>
          <default>100</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1776" package="PHPWavUtils">
        <name>convertBitsPerSample</name>
        <full_name>convertBitsPerSample</full_name>
        <docblock line="1770">
          <description>Convert sample data to different bits per sample.</description>
          <long-description></long-description>
          <tag line="1770" name="param" description="(Required) The new number of bits per sample;" type="int" variable="$bitsPerSample">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1770" name="throws" description="" type="\WavFileException">
            <type by_reference="false">\WavFileException</type>
          </tag>
        </docblock>
        <argument line="1776">
          <name>$bitsPerSample</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1803" package="PHPWavUtils">
        <name>displayInfo</name>
        <full_name>displayInfo</full_name>
        <docblock line="1800">
          <description>Output information about the wav object.</description>
          <long-description></long-description>
        </docblock>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="1856" package="Default">
      <extends>\Exception</extends>
      <name>WavFileException</name>
      <full_name>\WavFileException</full_name>
      <docblock line="1853">
        <description>WavFileException indicates an illegal state or argument in this class.</description>
        <long-description></long-description>
      </docblock>
    </class>
    <class final="false" abstract="false" namespace="global" line="1861" package="Default">
      <extends>\WavFileException</extends>
      <name>WavFormatException</name>
      <full_name>\WavFormatException</full_name>
      <docblock line="1858">
        <description>WavFormatException indicates a malformed or unsupported wav file header.</description>
        <long-description></long-description>
      </docblock>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file assets\securimage\WavFile.php</error>
      <error line="253" code="50010">No DocBlock was found for method __destruct()</error>
      <error line="257" code="50010">No DocBlock was found for method __clone()</error>
      <error line="450" code="50010">No DocBlock was found for method getActualSize()</error>
      <error line="454" code="50010">No DocBlock was found for method setActualSize()</error>
      <error line="464" code="50010">No DocBlock was found for method getChunkSize()</error>
      <error line="468" code="50010">No DocBlock was found for method setChunkSize()</error>
      <error line="484" code="50010">No DocBlock was found for method getFmtChunkSize()</error>
      <error line="488" code="50010">No DocBlock was found for method setFmtChunkSize()</error>
      <error line="501" code="50010">No DocBlock was found for method getFmtExtendedSize()</error>
      <error line="505" code="50010">No DocBlock was found for method setFmtExtendedSize()</error>
      <error line="523" code="50010">No DocBlock was found for method getFactChunkSize()</error>
      <error line="527" code="50010">No DocBlock was found for method setFactChunkSize()</error>
      <error line="544" code="50010">No DocBlock was found for method getDataSize()</error>
      <error line="548" code="50010">No DocBlock was found for method setDataSize()</error>
      <error line="562" code="50010">No DocBlock was found for method getDataOffset()</error>
      <error line="566" code="50010">No DocBlock was found for method setDataOffset()</error>
      <error line="580" code="50010">No DocBlock was found for method getAudioFormat()</error>
      <error line="584" code="50010">No DocBlock was found for method setAudioFormat()</error>
      <error line="609" code="50010">No DocBlock was found for method getAudioSubFormat()</error>
      <error line="613" code="50010">No DocBlock was found for method setAudioSubFormat()</error>
      <error line="627" code="50010">No DocBlock was found for method getNumChannels()</error>
      <error line="631" code="50010">No DocBlock was found for method setNumChannels()</error>
      <error line="647" code="50010">No DocBlock was found for method getChannelMask()</error>
      <error line="651" code="50010">No DocBlock was found for method setChannelMask()</error>
      <error line="672" code="50010">No DocBlock was found for method getSampleRate()</error>
      <error line="676" code="50010">No DocBlock was found for method setSampleRate()</error>
      <error line="690" code="50010">No DocBlock was found for method getBitsPerSample()</error>
      <error line="694" code="50010">No DocBlock was found for method setBitsPerSample()</error>
      <error line="710" code="50010">No DocBlock was found for method getValidBitsPerSample()</error>
      <error line="714" code="50010">No DocBlock was found for method setValidBitsPerSample()</error>
      <error line="729" code="50010">No DocBlock was found for method getBlockAlign()</error>
      <error line="733" code="50010">No DocBlock was found for method setBlockAlign()</error>
      <error line="745" code="50010">No DocBlock was found for method getNumBlocks()</error>
      <error line="750" code="50010">No DocBlock was found for method setNumBlocks()</error>
      <error line="760" code="50010">No DocBlock was found for method getByteRate()</error>
      <error line="764" code="50010">No DocBlock was found for method setByteRate()</error>
      <error line="774" code="50010">No DocBlock was found for method getSamples()</error>
      <error line="778" code="50010">No DocBlock was found for method setSamples()</error>
      <error line="794" code="50010">No DocBlock was found for method getMinAmplitude()</error>
      <error line="805" code="50010">No DocBlock was found for method getZeroAmplitude()</error>
      <error line="816" code="50010">No DocBlock was found for method getMaxAmplitude()</error>
    </parse_markers>
  </file>
  <file path="backdoor.php" hash="dafdee37b669f0168618f530fa24e31f" package="Default">
    <include line="3" type="Include" package="Default">
      <name>assets/php/config.php</name>
    </include>
    <include line="4" type="Include" package="Default">
      <name>assets/php/std_api.php</name>
    </include>
    <include line="32" type="Include" package="Default">
      <name>assets/php/standard.php</name>
    </include>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file backdoor.php</error>
    </parse_markers>
  </file>
  <file path="director.php" hash="84ccc7dbf7e6cacb6ec7762c2777d218" package="Default">
    <include line="2" type="Require Once" package="Default">
      <name>assets/php/std_api.php</name>
    </include>
    <include line="3" type="Require Once" package="Default">
      <name>assets/php/db_util.php</name>
    </include>
    <include line="4" type="Require Once" package="Default">
      <name>assets/php/config.php</name>
    </include>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file director.php</error>
    </parse_markers>
  </file>
  <file path="dynasearch.php" hash="1d38f2fb1390fd24a706140ae8f458fd" package="Default">
    <include line="2" type="Include" package="Default">
      <name>assets/php/config.php</name>
    </include>
    <include line="3" type="Include" package="Default">
      <name>assets/php/std_api.php</name>
    </include>
    <include line="4" type="Require Once" package="Default">
      <name>assets/php/db_util.php</name>
    </include>
    <include line="141" type="Include" package="Default">
      <name>assets/php/standard.php</name>
    </include>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file dynasearch.php</error>
    </parse_markers>
  </file>
  <file path="dynaview.php" hash="8b724b9d5ab284833b8dd3531c741b3c" package="Default">
    <include line="2" type="Include" package="Default">
      <name>assets/php/config.php</name>
    </include>
    <include line="3" type="Include" package="Default">
      <name>assets/php/std_api.php</name>
    </include>
    <include line="4" type="Require Once" package="Default">
      <name>assets/php/db_util.php</name>
    </include>
    <include line="128" type="Include" package="Default">
      <name>assets/php/standard.php</name>
    </include>
    <function namespace="global" line="41" package="Default">
      <name>strToHex</name>
      <full_name>\strToHex</full_name>
      <argument line="41">
        <name>$string</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="51" package="Default">
      <name>hexToStr</name>
      <full_name>\hexToStr</full_name>
      <argument line="51">
        <name>$hex</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file dynaview.php</error>
      <error line="41" code="50009">No DocBlock was found for function \strToHex()</error>
      <error line="51" code="50009">No DocBlock was found for function \hexToStr()</error>
    </parse_markers>
  </file>
  <file path="editor.php" hash="d0ce4de3efd5ded9cd9485ea18579ad7" package="Default">
    <include line="3" type="Require Once" package="Default">
      <name>assets/php/std_api.php</name>
    </include>
    <include line="4" type="Include" package="Default">
      <name>assets/php/config.php</name>
    </include>
    <include line="5" type="Include" package="Default">
      <name>assets/php/admin_dir.php</name>
    </include>
    <include line="46" type="Include" package="Default">
      <name>assets/php/standard.php</name>
    </include>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file editor.php</error>
    </parse_markers>
  </file>
  <file path="index.php" hash="f0d335a78e3534856df98e60ae1ed51b" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file index.php</error>
    </parse_markers>
  </file>
  <file path="instructions.php" hash="baa0c41f1ae0239b42c3a0c5d135d6a7" package="Default">
    <include line="2" type="Include" package="Default">
      <name>assets/php/config.php</name>
    </include>
    <include line="3" type="Include" package="Default">
      <name>assets/php/std_api.php</name>
    </include>
    <include line="4" type="Require Once" package="Default">
      <name>assets/php/db_util.php</name>
    </include>
    <include line="98" type="Include" package="Default">
      <name>assets/php/standard.php</name>
    </include>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file instructions.php</error>
    </parse_markers>
  </file>
  <file path="login.php" hash="3fee6cb5ee200e6e2730f07aadbafd5b" package="Default">
    <include line="2" type="Require Once" package="Default">
      <name>assets/php/std_api.php</name>
    </include>
    <include line="3" type="Require Once" package="Default">
      <name>assets/php/config.php</name>
    </include>
    <include line="61" type="Include" package="Default">
      <name>assets/php/standard.php</name>
    </include>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file login.php</error>
    </parse_markers>
  </file>
  <file path="logOut.php" hash="681b235f1e0490969622197e06a1c3b8" package="Default">
    <include line="2" type="Include" package="Default">
      <name>assets/php/config.php</name>
    </include>
    <include line="3" type="Include" package="Default">
      <name>assets/php/std_api.php</name>
    </include>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file logOut.php</error>
    </parse_markers>
  </file>
  <file path="mturk.php" hash="8362d80a83b0db32933687d8f11204f8" package="Default">
    <include line="2" type="Require Once" package="Default">
      <name>assets/php/std_api.php</name>
    </include>
    <include line="3" type="Require Once" package="Default">
      <name>assets/php/config.php</name>
    </include>
    <include line="47" type="Include" package="Default">
      <name>assets/php/standard.php</name>
    </include>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file mturk.php</error>
    </parse_markers>
  </file>
  <file path="questEditor.php" hash="04314379535b9030db0b74b7990a077e" package="Default">
    <include line="5" type="Include" package="Default">
      <name>assets/php/config.php</name>
    </include>
    <include line="6" type="Include" package="Default">
      <name>assets/php/std_api.php</name>
    </include>
    <include line="99" type="Include" package="Default">
      <name>assets/php/standard.php</name>
    </include>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file questEditor.php</error>
    </parse_markers>
  </file>
  <file path="question.php" hash="8abf4ccb241a77972a26c4208c9285f6" package="Default">
    <include line="2" type="Include" package="Default">
      <name>assets/php/config.php</name>
    </include>
    <include line="3" type="Include" package="Default">
      <name>assets/php/std_api.php</name>
    </include>
    <include line="4" type="Require Once" package="Default">
      <name>assets/php/db_util.php</name>
    </include>
    <include line="72" type="Include" package="Default">
      <name>assets/php/standard.php</name>
    </include>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file question.php</error>
    </parse_markers>
  </file>
  <file path="reset.php" hash="85dfe0ee4d20a2759b7ee50ffd82dbc5" package="Default">
    <include line="7" type="Require Once" package="Default">
      <name>assets/php/std_api.php</name>
      <docblock line="3">
        <description>PASSWORD RESET PAGE</description>
        <long-description></long-description>
      </docblock>
    </include>
    <include line="8" type="Require Once" package="Default">
      <name>assets/php/config.php</name>
    </include>
    <include line="30" type="Include" package="Default">
      <name>assets/php/standard.php</name>
    </include>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file reset.php</error>
    </parse_markers>
  </file>
  <file path="setup_mt.php" hash="1fa7b35eb62ed8e7b0f841c6297de762" package="Default">
    <include line="3" type="Include" package="Default">
      <name>assets/php/config.php</name>
    </include>
    <include line="4" type="Include" package="Default">
      <name>assets/php/std_api.php</name>
    </include>
    <include line="13" type="Include" package="Default">
      <name>assets/php/db_util.php</name>
    </include>
    <include line="14" type="Include" package="Default">
      <name>assets/php/admin_dir.php</name>
    </include>
    <include line="92" type="Include" package="Default">
      <name>assets/php/standard.php</name>
    </include>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file setup_mt.php</error>
    </parse_markers>
  </file>
  <file path="sizeReg.php" hash="f723b223128b960b9b163ee6bc10e7ea" package="Default">
    <include line="2" type="Include" package="Default">
      <name>assets/php/config.php</name>
    </include>
    <include line="3" type="Include" package="Default">
      <name>assets/php/std_api.php</name>
    </include>
    <include line="4" type="Require Once" package="Default">
      <name>assets/php/db_util.php</name>
    </include>
    <include line="56" type="Include" package="Default">
      <name>assets/php/standard.php</name>
    </include>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file sizeReg.php</error>
    </parse_markers>
  </file>
  <file path="survey.php" hash="bafc11ece967439da764e46581ce1acd" package="Default">
    <include line="2" type="Include" package="Default">
      <name>assets/php/config.php</name>
    </include>
    <include line="3" type="Include" package="Default">
      <name>assets/php/std_api.php</name>
    </include>
    <include line="38" type="Include" package="Default">
      <name>assets/php/standard.php</name>
    </include>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file survey.php</error>
    </parse_markers>
  </file>
  <file path="survey_setup.php" hash="fce267b4247a0516556d972202403ae1" package="Default">
    <include line="3" type="Include" package="Default">
      <name>assets/php/config.php</name>
    </include>
    <include line="4" type="Include" package="Default">
      <name>assets/php/std_api.php</name>
    </include>
    <include line="13" type="Include" package="Default">
      <name>assets/php/db_util.php</name>
    </include>
    <include line="27" type="Include" package="Default">
      <name>assets/php/admin_dir.php</name>
    </include>
    <include line="105" type="Include" package="Default">
      <name>assets/php/standard.php</name>
    </include>
    <markers>
      <todo line="16">IS THIS A BAD IDEA?</todo>
    </markers>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file survey_setup.php</error>
    </parse_markers>
  </file>
  <file path="userAdmin.php" hash="923a3a946e1a35d883b9176d1de4d9cd" package="Default">
    <include line="3" type="Require Once" package="Default">
      <name>assets/php/std_api.php</name>
    </include>
    <include line="4" type="Include" package="Default">
      <name>assets/php/config.php</name>
    </include>
    <include line="5" type="Include" package="Default">
      <name>assets/php/db_util.php</name>
    </include>
    <include line="6" type="Include" package="Default">
      <name>assets/php/PasswordHash.php</name>
    </include>
    <include line="16" type="Include" package="Default">
      <name>assets/php/standard.php</name>
    </include>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file userAdmin.php</error>
    </parse_markers>
  </file>
  <file path="userOutput.php" hash="2607c60374dae86e6c19210b0c1b15fc" package="Default">
    <include line="3" type="Require Once" package="Default">
      <name>assets/php/std_api.php</name>
    </include>
    <include line="4" type="Include" package="Default">
      <name>assets/php/config.php</name>
    </include>
    <include line="5" type="Include" package="Default">
      <name>assets/php/db_util.php</name>
    </include>
    <include line="143" type="Include" package="Default">
      <name>assets/php/standard.php</name>
    </include>
    <function namespace="global" line="11" package="Default">
      <name>formatQuestResults</name>
      <full_name>\formatQuestResults</full_name>
      <argument line="11">
        <name>$qDOM</name>
        <default></default>
        <type/>
      </argument>
      <argument line="11">
        <name>$type</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="274" package="Default">
      <name>constructQuestResults</name>
      <full_name>\constructQuestResults</full_name>
      <argument line="274">
        <name>$qDOM</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file userOutput.php</error>
      <error line="11" code="50009">No DocBlock was found for function \formatQuestResults()</error>
      <error line="274" code="50009">No DocBlock was found for function \constructQuestResults()</error>
    </parse_markers>
  </file>
  <package name="Default" full_name="Default"/>
  <package name="PHPWavUtils" full_name="PHPWavUtils"/>
  <package name="Securimage" full_name="Securimage">
    <package name="classes" full_name="Securimage\classes"/>
  </package>
  <namespace name="global" full_name="global"/>
  <marker count="6">todo</marker>
  <marker count="0">fixme</marker>
  <deprecated count="0"/>
</project>
